{"version":3,"sources":["redux/actions/leagues.js","components/navbar-buttons/AboutButton.js","redux/actions/mainDisplay.js","components/navbar-buttons/UserProfileButton.js","components/navbar-buttons/league/LeagueButton.js","components/navbar-buttons/league/LeagueButtonsContainer.js","components/navbar-buttons/league/LeagueDropdown.js","components/auth/forms/LoginForm.js","components/auth/forms/SignupForm.js","components/auth/Auth.js","components/containers/NavBar.js","components/gamecards/CompletedGameCard.js","components/GameListings/CompletedGameListings.js","components/gamecards/SelectedGameCard.js","components/GameListings/SelectedGameListings.js","components/gamecards/UpcomingGameCard.js","components/GameListings/UpcomingGameListings.js","redux/actions/user.js","components/containers/UpcomingAndSelectedGamesContainer.js","components/containers/AllGamesContainer.js","components/user/LoggedOnDisplay.js","components/AboutPage.js","components/gamecards/UserPicks.js","components/user/ProfileContainer.js","App.js","serviceWorker.js","redux/reducers/isLoggedIn.js","redux/reducers/user.js","redux/reducers/mainContainerDisplay.js","redux/reducers/leagues.js","redux/reducers/index.js","index.js"],"names":["leagueIds","selectLeague","league","dispatch","type","fetchUpcomingGames","leagueId","fetch","then","response","json","events","upcomingGames","fetchPastGames","pastGames","selectNFL","selectMLB","selectNBA","selectNHL","selectEPL","connect","aboutOn","props","to","className","onClick","profileOn","showProfile","gamesOn","showGames","id","name","emoji","select","key","role","aria-label","state","leagues","refreshProfile","user","payload","adjustUserBettingPoints","points","leagueArr","push","addSelect","map","LeagueDropdown","useState","isShown","setIsShown","switchLeague","resetProfile","isProfile","aboutOff","onMouseEnter","onMouseLeave","loginURL","Login","username","password","error","handleChange","event","target","value","setState","addUser","logIn","handleSubmit","preventDefault","method","headers","body","JSON","stringify","status","result","token","localStorage","setItem","user_id","alert","catch","message","handleError","this","onSubmit","placeholder","onChange","console","log","React","Component","isLoggedIn","usersURL","Signup","betting_points","setisLoginShown","reset","logout","isLoginShown","setIsLoggedIn","clear","onMouseOver","style","cursor","pointer","LoginForm","toggleIsLoggedIn","setUserProfile","SignupForm","GameCard","game","homeScore","intHomeScore","awayScore","intAwayScore","eventDate","dateEvent","strTime","idEvent","strEventAlternate","strHomeTeam","strAwayTeam","homeVsAway","PastGameListings","currentLeague","selectGame","gameList","leagueName","upcomingGamesMessage","noUpcomingGamesMessage","games","checkGames","SelectedGame","submitSelectedGame","removeSelectedGame","setPoints","addPoints","num","points_allocated","parseInt","selectedWinnerString","SelectedGames","selectedGames","handleClick","selectedWinnerId","homeButton","idHomeTeam","awayButton","idAwayTeam","idLeague","americanEvent","UpcomingGameListings","confirmUserData","adjustPoints","newPoints","r","UpcomingAndSelected","find","theGame","newSelectedGames","filter","selectedGame","submitGame","game_selection","selected","UpcomingAndSelectedGamesContainer","AboutPage","href","deleteSubmittedGame","refreshUserProfile","completed","g","deleted_game","handleRefresh","handleDelete","game_selections","gameSelections","App","fetchGames","fetchUpcomingGamesNFL","fetchPastGamesNFL","fetchUpcomingGamesMLB","fetchPastGamesMLB","fetchUpcomingGamesNBA","fetchPastGamesNBA","fetchUpcomingGamesNHL","fetchPastGamesNHL","fetchUpcomingGamesEPL","fetchPastGamesEPL","exact","path","Boolean","window","location","hostname","match","action","userReducer","requesting","mainContainerDisplay","EPL","NFL","MLB","NHL","NBA","leaguesReducer","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0TAAMA,EAAmB,KAAnBA,EAA8B,KAA9BA,EAAyC,KAAzCA,EAAoD,KAApDA,EAA+D,KAErE,SAASC,EAAaC,GAClB,OAAO,SAACC,GACJA,EAAS,CAACC,KAAM,sBAChBD,EAAS,CAACC,KAAK,UAAD,OAAYF,MAIlC,SAASG,EAAmBH,EAAQI,GAChC,OAAO,SAACH,GACJA,EAAS,CAACC,KAAK,+BAAD,OAAiCF,KAC/CK,MAAM,qEAAD,OAAsED,IACrEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOA,UACtBH,MAAK,SAAAI,GAAa,OAChBT,EAAS,CAACC,KAAK,sBAAD,OAAwBF,GAAUU,sBAGhE,SAASC,EAAeX,EAAQI,GAC5B,OAAO,SAACH,GACJA,EAAS,CAACC,KAAK,2BAAD,OAA6BF,KAC3CK,MAAM,qEAAD,OAAsED,IACrEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOA,UACtBH,MAAK,SAAAM,GAAS,OACZX,EAAS,CAACC,KAAK,kBAAD,OAAoBF,GAAUY,iBAC9CN,QAId,SAASO,IACL,OAAOd,EAAa,OAExB,SAASe,IACL,OAAOf,EAAa,OAExB,SAASgB,IACL,OAAOhB,EAAa,OAExB,SAASiB,IACL,OAAOjB,EAAa,OAExB,SAASkB,IACL,OAAOlB,EAAa,OCpBTmB,kBAAQ,MALvB,SAA4BjB,GACxB,MAAM,CACFkB,QAAS,kBCpBN,SAAAlB,GAAQ,OAAIA,EAAS,CAACC,KAAM,eDuBxBgB,EAlBf,SAAqBE,GAEjB,OACI,6BACI,kBAAC,IAAD,CAAMC,GAAG,UACL,4BAAQC,UAAU,4BAA4BC,QAAS,kBAAMH,EAAMD,YAAnE,cEqBDD,kBAAQ,MALvB,SAA4BjB,GACxB,MAAM,CACFuB,UAAW,kBDzBnB,SAAqBvB,GACjBA,EAAS,CAACC,KAAM,YCwBKuB,CAAYxB,OAGtBiB,EAxBf,SAA2BE,GAOvB,OACI,yBAAKE,UAAU,YAEX,kBAAC,IAAD,CAAMD,GAAG,YACL,4BAAQC,UAAU,4BAA4BC,QATtC,WAChBH,EAAMI,cAQE,gB,QC2BDN,kBAAQ,MAVvB,SAA4BjB,GACxB,MAAM,CACFyB,QAAS,kBF9BjB,SAAmBzB,GACfA,EAAS,CAACC,KAAM,UE6BGyB,CAAU1B,IACzBY,UAAW,kBAAMZ,EAASY,MAC1BE,UAAW,kBAAMd,EAASc,MAC1BC,UAAW,kBAAMf,EAASe,MAC1BC,UAAW,kBAAMhB,EAASgB,MAC1BH,UAAW,kBAAMb,EAASa,SAGnBI,EAhCf,SAAsBE,GAAQ,IAClBQ,EAA4BR,EAA5BQ,GAAIC,EAAwBT,EAAxBS,KAAMC,EAAkBV,EAAlBU,MAAOC,EAAWX,EAAXW,OAOzB,OAEI,yBAAKT,UAAU,cACX,kBAAC,IAAD,CAAMD,GAAG,UACL,4BAAQC,UAAU,cAAcM,GAAIA,EAAII,IAAKJ,EAAIL,QAT7D,WACIH,EAAMM,UACNK,MAQaF,EACD,0BAAMI,KAAK,MAAMC,aAAYL,GAA7B,KAAsCC,SC+B3CZ,mBAnBf,SAAyBiB,GACrB,MAAO,CACHC,QAASD,EAAMC,YAIrB,SAA4BnC,GAC1B,MAAO,CACHoC,eAAgB,SAACC,GAAD,OAAUrC,EAAS,CAACC,KAAM,kBAAmBqC,QAASD,KACtEE,wBAAyB,SAACC,GAAD,OAAYxC,EAAS,CAACC,KAAM,gBAAiBqC,QAASE,KAC/E5B,UAAW,kBAAMZ,EAASY,MAC1BE,UAAW,kBAAMd,EAASc,MAC1BC,UAAW,kBAAMf,EAASe,MAC1BC,UAAW,kBAAMhB,EAASgB,MAC1BH,UAAW,kBAAMb,EAASa,SAKnBI,EAtDf,SAAwBE,GACpB,IAAIsB,EAAY,GAEhB,IAAM,IAAI1C,KAAUoB,EAAMgB,QACtBM,EAAUC,KAAKvB,EAAMgB,QAAQpC,IAGjC,IAMM4C,EAAY,SAAA5C,GACd,OAAOA,EAAO4B,IACV,KAAK,KACD,OAAOR,EAAMP,UACjB,KAAK,KACD,OAAOO,EAAMH,UACjB,KAAK,KACD,OAAOG,EAAMN,UACjB,KAAK,KACD,OAAOM,EAAMJ,UACjB,KAAK,KACD,OAAOI,EAAML,UACjB,QAAS,OAAO,OAGxB,OACI,yBAAKO,UAAU,2BArBRoB,EAAUG,KAAI,SAAA7C,GACjB,OAAO,kBAAC,EAAD,CAAcgC,IAAKhC,EAAO4B,GAAIA,GAAI5B,EAAO4B,GAAIC,KAAM7B,EAAO6B,KAAMC,MAAO9B,EAAO8B,MAAOC,OAAQa,EAAU5C,YCa3G8C,MAxBf,SAAwB1B,GAAQ,IAAD,EACC2B,oBAAS,GADV,mBACtBC,EADsB,KACbC,EADa,KAGtBb,EAA6DhB,EAA7DgB,QAASc,EAAoD9B,EAApD8B,aAAcC,EAAsC/B,EAAtC+B,aAAcC,EAAwBhC,EAAxBgC,UAAWC,EAAajC,EAAbiC,SAGvD,OACE,yBACE/B,UAAU,WACVgC,aAAc,kBAAML,GAAW,IAC/BM,aAAc,kBAAMN,GAAW,KAE/B,4BAAQ3B,UAAU,mBACd8B,EAA8B,aAAlB,iBAEfJ,GACC,6BACE,kBAAC,EAAD,CAAeZ,QAASA,EAASc,aAAgBA,EAAcC,aAAcA,EAAcE,SAAUA,O,QCjBzGG,EAAW,8BAEXC,E,4MACFtB,MAAQ,CACJuB,SAAU,GACVC,SAAU,GACVC,MAAO,I,EAGXC,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBlC,EADY,EACZA,KAAMmC,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBpC,EAAQmC,K,EAG7BE,QAAU,SAAC5B,GACP,EAAKlB,MAAM+C,MAAM7B,I,EAGrB8B,aAAe,SAAAN,GACXA,EAAMO,iBAENhE,MAAMmD,EAAU,CACZc,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,EAAKvC,SAE7B7B,MAAK,SAAAC,GACF,OAA2B,MAApBA,EAASoE,OAAiBpE,EAASC,OAASD,EAASoE,UAE/DrE,MAAK,SAAAsE,GACEA,EAAOC,OACP,EAAKX,QAAQU,EAAOtC,MACpBwC,aAAaC,QAAQ,QAASH,EAAOC,OACrCC,aAAaC,QAAQ,UAAWH,EAAOI,UAEvCC,MAAM,qCAKbC,OAAM,SAAAtB,GAAK,OAAI,EAAKK,SAAS,CAACL,MAAOA,EAAMuB,c,EAGhDC,YAAc,WACV,OACI,EAAKjD,MAAMyB,MAAQ,uBAAGtC,UAAU,iBAAiB,EAAKa,MAAMyB,OAAa,M,uDAGvE,IAAD,EAE0ByB,KAAKlD,MAA5BuB,EAFH,EAEGA,SAAUC,EAFb,EAEaA,SAElB,OACI,yBAAKrC,UAAU,QACX,0BAAMA,UAAY,kBAAkBgE,SAAUD,KAAKjB,cAC/C,2BACIlE,KAAK,WACL2B,KAAK,WACLmC,MAAON,EACP6B,YAAY,WACZC,SAAYH,KAAKxB,eAErB,2BACI3D,KAAK,WACL2B,KAAK,WACLmC,MAAOL,EACP4B,YAAY,WACZC,SAAYH,KAAKxB,eAIrB,2BAAO3D,KAAK,SAAS8D,MAAM,QAAQ1C,UAAU,gBAC5C+D,KAAKlD,MAAMyB,MAAQ6B,QAAQC,IAAIL,KAAKlD,MAAMyB,OAAS,W,GAxEpD+B,IAAMC,WA4FX1E,mBAZf,SAAyBiB,GACrB,MAAO,CACH0D,WAAY1D,EAAM0D,eAI1B,SAA4B5F,GACxB,MAAO,CACHkE,MAAO,SAAC7B,GAAD,OAAUrC,EAAS,CAACC,KAAM,SAAUqC,QAASD,QAI7CpB,CAA6CuC,GC/FtDqC,EAAW,8BA2EFC,E,4MAxEX5D,MAAQ,CACJuB,SAAU,GACVC,SAAU,GACVqC,eAAgB,K,EAGpBnC,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBlC,EADY,EACZA,KAAMmC,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBpC,EAAQmC,K,EAG7BI,aAAe,SAAAN,GACXA,EAAMO,iBAENhE,MAAMyF,EAAU,CACZxB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACpC,KAAM,EAAKH,UAEpC7B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAsE,GAEFa,QAAQC,IAAId,GACRA,EAAOO,QAAQzB,SACfuB,MAAM,YAAD,OAAaL,EAAOO,QAAQzB,WAC1BkB,EAAOO,QAAQxB,SACtBsB,MAAM,YAAD,OAAaL,EAAOO,QAAQxB,YAEjCsB,MAAML,EAAOO,SACbL,aAAaC,QAAQ,QAASH,EAAOC,OACrCC,aAAaC,QAAQ,UAAWH,EAAOI,SACvC,EAAK5D,MAAM6E,iBAAgB,OAGnCnC,EAAMC,OAAOmC,S,uDAIP,IAAD,EAE0Bb,KAAKlD,MAA5BuB,EAFH,EAEGA,SAAUC,EAFb,EAEaA,SAElB,OACI,yBAAKrC,UAAU,QAEX,0BAAMA,UAAY,mBAAmBgE,SAAUD,KAAKjB,cAChD,2BACIlE,KAAK,WACL2B,KAAK,WACLmC,MAAON,EACP6B,YAAY,WACZC,SAAYH,KAAKxB,eAErB,2BACI3D,KAAK,WACL2B,KAAK,WACLmC,MAAOL,EACP4B,YAAY,WACZC,SAAYH,KAAKxB,eAIrB,2BAAO3D,KAAK,SAAS8D,MAAM,WAAW1C,UAAU,sB,GAjE/CqE,IAAMC,WCyDZ1E,mBAdf,SAAyBiB,GACrB,MAAO,CACH0D,WAAY1D,EAAM0D,WAClBvD,KAAMH,EAAMG,SAIpB,SAA4BrC,GACxB,MAAO,CACHkG,OAAQ,kBAAMlG,EAAS,CAACC,KAAM,gBAKvBgB,EAvDf,SAAcE,GAAQ,IAAD,EACa2B,oBAAS,GADtB,mBACVC,EADU,KACDC,EADC,OAEuBF,oBAAS,GAFhC,mBAEVqD,EAFU,KAEIH,EAFJ,OAGmBlD,oBAAS,GAH5B,mBAGV8C,EAHU,KAGEQ,EAHF,KAaXF,EAAS,WACX/E,EAAM+E,SACNrB,aAAawB,QACbD,GAAc,GACdpD,GAAW,IAOf,OACA,yBACI3B,UAAU,YAEV,4BAAQA,UAAU,4BAA4BC,QAAUH,EAAMyE,WAA2BM,EAvBzE,kBAAON,EAAoCM,IAAvBlD,GAAYD,IAuBiDuD,YAAa,SAAAzC,GAAK,OARvG,SAACA,GACb,OAAOA,EAAMC,OAAOyC,MAAMC,OAAS,UAOoFC,CAAQ5C,KAC9H1C,EAAMyE,WAAN,mBAA+BzE,EAAMkB,KAAKoB,SAA1C,KAAwD,2BAExDV,IAAY5B,EAAMyE,YACf,yBAAKvE,UAAU,mBACV8E,EAAe,kBAACO,EAAD,CAAWC,iBAxBd,WACrBP,GAAc,IAuByDQ,eAAgBzF,EAAMyF,iBAAoB,kBAACC,EAAD,CAAYb,gBAAiBA,IACtI,4BAAQ3E,UAAU,cAAcC,QA3BxB,kBAAM0E,GAAiBG,KA2BwBA,EAAe,oBAAsB,iCCX3FlF,mBANjB,SAAyBiB,GACrB,MAAO,CACH0D,WAAY1D,EAAM0D,cAIgB,KAAzB3E,EAnBjB,SAAgBE,GAEZ,OACI,yBAAKE,UAAU,sBACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,MACCF,EAAMyE,WAAa,kBAAC,EAAD,MAAyB,KAC7C,kBAAC,EAAD,MACA,kBAAC,EAAD,WChBD,SAASkB,EAAS3F,GAAQ,IAC9B4F,EAAQ5F,EAAR4F,KAEHC,EAAYD,EAAKE,aACjBC,EAAYH,EAAKI,aAkDrB,OACI,yBAAK9F,UAAU,uBAZA,WACnB,IAAI+F,EAAY,2BAAIL,EAAKM,UAAT,OAAwBN,EAAKO,SAC7C,OACI,yBAAKjG,UAAY,YAAYU,IAAKgF,EAAKQ,SACvC,4BAAKR,EAAKS,mBACLJ,EAfDJ,GAAaE,EAzBTF,IAAcE,EAGVF,EAAYE,EACR,yBAAK7F,UAAU,cACX,4BAAI,2BAAI0F,EAAKU,YAAT,KAAwBT,IAC5B,4BAAKD,EAAKW,YAAV,KAAyBR,IAE7B,yBAAK7F,UAAU,cACX,4BAAK0F,EAAKU,YAAV,KAAyBT,GACzB,4BAAI,2BAAID,EAAKW,YAAT,KAAwBR,KAKpC,yBAAK7F,UAAU,cACX,2BAAI0F,EAAKU,YAAT,KAAwBT,GACxB,2BAAID,EAAKW,YAAT,KAAwBR,IAa7B,4DAkBNS,ICvDE,SAASC,EAAiBzG,GAAQ,IAErC0G,EAA+B1G,EAA/B0G,cAAgBC,EAAe3G,EAAf2G,WAElBC,EAAWF,EAAclH,UAAYkH,EAAclH,UAAY,GAE/DqH,EAAaH,EAAcjG,KAE3BqG,EAAuB,oCAAUD,EAAV,WACvBE,EAA0B,wBAAI7G,UAAU,oBAAd,MAAqC2G,EAArC,8CACA,6BADA,gCAGA,6BAHA,8BAO1BG,EACFJ,EAASnF,KAAI,SAAAmE,GACT,OACQ,kBAAC,EAAD,CAAmBA,KAAMA,EAAMhF,IAAKgF,EAAKQ,QAAUO,WAAaA,OAM1EM,EAAaL,EAAS,GAAKE,EAAuBC,EAExD,OACQ,yBAAK7G,UAAY,kBACZ+G,EACAD,G,YC/BF,SAASE,EAAalH,GAAQ,IAEjC4F,EAAiD5F,EAAjD4F,KAAMuB,EAA2CnH,EAA3CmH,mBAAoBC,EAAuBpH,EAAvBoH,mBAFM,EAIZzF,mBAAS,GAJG,mBAIjCN,EAJiC,KAIzBgG,EAJyB,KAcxC,SAASC,EAAUC,GAEf,OADA3B,EAAK4B,iBAAmBC,SAAS7B,EAAK4B,iBAAmBD,GAClD3B,EAeX,OACI,yBAAK1F,UAAY,YAAYU,IAAKgF,EAAKQ,SAC/B,2BAAIR,EAAKS,mBACT,+CACI,6BACCT,EAAK8B,sBAEN,4BAAQvH,QAnBJ,WAChBkH,EAAUhG,EAAO,GACjBiG,EAAU,IAiBgCpH,UAAU,eAAxC,iBACA,4BAAQC,QAhBF,WAClBkH,EAAUhG,EAAO,GACjBiG,EAAU,IAckCpH,UAAU,eAA1C,kBACA,4BAAQC,QAbH,WACjBkH,EAAUhG,EAAO,IACjBiG,EAAU,KAWiCpH,UAAU,eAAzC,mBACA,6BACA,4BAAQC,QApCxB,WACIgH,EAAmBvB,IAmCwB1F,UAAU,eAAzC,oBACA,4BAAQC,QAjCxB,WACIiH,EAAmBxB,IAgCwB1F,UAAU,eAAzC,oBACA,+CACKmB,GAGT,2BAAIuE,EAAKM,UAAT,OAAwBN,EAAKO,UC9C9B,SAASwB,EAAe3H,GAAQ,IACnC4H,EAA0D5H,EAA1D4H,cAAeT,EAA2CnH,EAA3CmH,mBAAoBC,EAAuBpH,EAAvBoH,mBAMvC,OACI,6BACI,yBAAKlH,UAAU,kBANL0H,EAAc,GAAK,4CAAwB,gDAEtCA,EAAcnG,KAAI,SAAAmE,GAAI,OAAK,kBAACsB,EAAD,CAAkBtB,KAAMA,EAAMuB,mBAAoBA,EAAoBC,mBAAoBA,EAAoBxG,IAAKgF,EAAKQ,eCPnK,SAAST,EAAS3F,GAAQ,IAC9B4F,EAAoB5F,EAApB4F,KAAMe,EAAc3G,EAAd2G,WAEb,SAASkB,EAAYnF,GAIjB,OAHAkD,EAAKkC,iBAAmBpF,EAAMC,OAAOnC,GACrCoF,EAAK8B,qBAAuBhF,EAAMC,OAAOC,MACzCgD,EAAK4B,iBAAmB,EACjBb,EAAWf,GA+BtB,OACI,yBAAK1F,UAAU,uBA7BA,WACf,IAAI6H,EAAa,4BAAQ7H,UAAU,cAAaC,QAAS0H,EAAarH,GAAIoF,EAAKoC,WAAYpF,MAAOgD,EAAKU,aAAcV,EAAKU,YAAzG,WACb2B,EAAa,4BAAQ/H,UAAU,cAAcC,QAAS0H,EAAarH,GAAIoF,EAAKsC,WAAYtF,MAAOgD,EAAKW,aAAcX,EAAKW,YAA1G,WAEbN,EAAY,2BAAIL,EAAKM,UAAT,OAAwBN,EAAKO,SAE7C,OAHoB,SAAAP,GAAI,OAAK6B,SAAS7B,EAAKuC,YAAcV,SAAS,MAG9DW,CAAcxC,GAEV,yBAAK1F,UAAY,YAAYU,IAAKgF,EAAKQ,SACvC,4BAAKR,EAAKS,mBACLJ,EACIgC,EACAF,GAKT,yBAAK7H,UAAY,YAAYU,IAAKgF,EAAKQ,SACnC,4BAAKR,EAAKU,YAAV,QAA4BV,EAAKW,aAChCN,EACI8B,EACAE,GASZzB,ICvCE,SAAS6B,EAAqBrI,GAAQ,IAEzC0G,EAA+B1G,EAA/B0G,cAAgBC,EAAe3G,EAAf2G,WAElBC,EAAWF,EAAcpH,cAAgBoH,EAAcpH,cAAgB,GAEvEuH,EAAaH,EAAcjG,KAE3BqG,EAAuB,wCAAcD,EAAd,WACvBE,EACL,wBAAI7G,UAAU,oBAAd,kEAGK8G,EACFJ,EAASnF,KAAI,SAAAmE,GACT,OACI,kBAAC,EAAD,CAAkBA,KAAMA,EAAMhF,IAAKgF,EAAKQ,QAAUO,WAAaA,OAK3E,OACQ,yBAAKzG,UAAY,kBACZ0G,EAAS,GAAKE,EAAuBC,EACrCC,GCrBjB,SAASsB,IACL,OAAO,SAACzJ,GACJA,EAAS,CAACC,KAAM,0BAChBG,MAAM,+BAAD,OAAgCyE,aAAaE,SAAW,CACzDV,OAAQ,MACRC,QAAS,CACD,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BO,aAAaD,UAGlDvE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAgC,GACHrC,EAAS,CAACC,KAAM,eAAgBoC,aAwB5C,SAASqH,EAAaC,GAClB,OAAO,SAAC3J,GACJA,EAAS,CAACC,KAAM,2BAChBG,MAAM,+BAAD,OAAgCyE,aAAaE,SAAW,CACzDV,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BO,aAAaD,QAE5CL,KAAMC,KAAKC,UAAU,CAACsB,eAAgB4D,MACvCtJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAuJ,GACH5J,EAAS,CAACC,KAAM,gBAAiB8F,eAAgB4D,Q,IC9CvDE,E,4MACF3H,MAAQ,CACJ6G,cAAe,I,EAGnBjB,WAAa,SAACf,GACN,EAAK7E,MAAM6G,cAAce,MAAK,SAAAC,GAAO,OAAIhD,EAAKQ,UAAYwC,EAAQxC,WAKpE,EAAKvD,SAAS,CACZ+E,cAAc,YAAK,EAAK7G,MAAM6G,iBALhC,EAAK/E,SAAS,CACZ+E,cAAc,GAAD,mBAAM,EAAK7G,MAAM6G,eAAjB,CAAgChC,O,EASrDwB,mBAAqB,SAACxB,GACtB,IAAIiD,EAAmB,EAAK9H,MAAM6G,cAAckB,QAAO,SAAAC,GAAY,OAAInD,EAAKQ,UAAY2C,EAAa3C,WACrG,EAAKvD,SAAS,CACV+E,cAAeiB,K,EAKrB1B,mBAAqB,SAACvB,GACpB,IAAI4C,EAAY,EAAKxI,MAAMkB,KAAK0D,eAAiBgB,EAAK4B,iBACtD,GAAI,EAAKxH,MAAMyE,WAAW,CACxB,GAAI+D,GAAa,EACf,OACE,EAAKxI,MAAMgJ,WAAWpD,GACtB,EAAK5F,MAAMuI,aAAaC,GACxB,EAAKpB,mBAAmBxB,GAG1B/B,MAAM,6CAEJA,MAAM,sC,uDAiDR,OACI,oCACI,kBAACwE,EAAD,CAAsB3B,cAAiBzC,KAAKjE,MAAM0G,cAAeC,WAAa1C,KAAK0C,aACnF,kBAAC,EAAD,CAAsBiB,cAAe3D,KAAKlD,MAAM6G,cAAeT,mBAAoBlD,KAAKkD,mBAAoBC,mBAAoBnD,KAAKmD,0B,GAzFnH5C,aA+GnB1E,mBAff,SAAyBiB,GACvB,MAAO,CACH0D,WAAY1D,EAAM0D,WAClBvD,KAAMH,EAAMG,SAIlB,SAA4BrC,GAC1B,MAAO,CACHyJ,gBAAiB,SAACpH,GAAD,OAAUrC,EAASyJ,MACpCU,WAAY,SAACpD,GAAD,OAAU/G,ED5F5B,SAAoB+G,GAChB,OAAO,SAAC/G,GACJA,EAAS,CAACC,KAAM,0BAChBG,MAtBc,wCAsBU,CACpBiE,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BO,aAAaD,QAE5CL,KAAMC,KAAKC,UAAUsC,KACtB1G,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAuJ,GAEH,GADApE,QAAQC,IAAImE,GACM,aAAdA,EAAE1E,QACF,OAAOlF,EAAS,CAACC,KAAM,cAAe8G,KAAM6C,EAAEQ,iBAC1CpF,MAAM,iDC6EWmF,CAAWpD,KAC1C2C,aAAc,SAAClH,GAAD,OAAYxC,EAAS0J,EAAalH,QAIvCvB,CAA6C4I,GClF7C5I,mBAZf,SAAyBiB,GACrB,MAAO,CACHC,QAASD,EAAMC,QACfyD,WAAY1D,EAAM0D,eAG1B,SAA4B5F,GACxB,MAAO,CACHuC,wBAAyB,SAACC,GAAD,OAAYxC,EAAS,CAACC,KAAM,gBAAiBqC,QAASE,QAIxEvB,EA/Bf,SAA2BE,GAEvB,IAAIsB,EAAY,GAEhB,IAAM,IAAI1C,KAAUoB,EAAMgB,QACtBM,EAAUC,KAAKvB,EAAMgB,QAAQpC,IAGjC,IAAI8H,EAAgBpF,EAAUqH,MAAK,SAAA/J,GAAM,OAAsB,IAAlBA,EAAOsK,YAEpD,OACI,yBAAKhJ,UAAU,uBACX,kBAAC,EAAD,CAAuBwG,cAAiBA,IACxC,kBAACyC,EAAD,CAAmCzC,cAAiBA,EAAetF,wBAAyBpB,EAAMoB,8BCA/FtB,mBANf,SAAyBiB,GACrB,MAAO,CACHG,KAAMH,EAAMG,QAIoB,KAAzBpB,EAhBf,SAAyBE,GACrB,OACI,6BAEI,8DAAoCA,EAAMkB,KAAK0D,oBCL5C,SAASwE,KACpB,OACI,6BAEI,wBAAIlJ,UAAU,YAAd,iBACA,wMAEA,gKACA,oHACA,+KACA,0KACA,wCAAa,+CAAb,mIACA,8IACA,2HACA,4EAAiD,uBAAGmJ,KAAK,gCAAR,gCAAjD,uBACA,wBAAInJ,UAAU,YAAd,gECfG,SAASgH,GAAalH,GAAQ,IAEjC4F,EAAiD5F,EAAjD4F,KAAM0D,EAA2CtJ,EAA3CsJ,oBAAqBC,EAAsBvJ,EAAtBuJ,mBASnC,OACI,yBAAKrJ,UAAY,YAAYU,IAAKgF,EAAKQ,SAC/B,2BAAIR,EAAKS,mBACT,+CACI,6BACCT,EAAK8B,qBAAuB9B,EAAK8B,qBAAuB,YACxD9B,EAAK4D,UAAY,wCAAmB,MAEzC,iDAAuB5D,EAAK4B,kBAC5B,4BAAQrH,QAhBpB,WACI,OACImJ,EAAoB1D,GACpB2D,KAamCrJ,UAAU,eAAzC,oBACA,2BAAI0F,EAAKM,UAAT,OAAwBN,EAAKO,UC2C9BrG,oBAjBf,SAAyBiB,GACrB,MAAO,CACH0D,WAAY1D,EAAM0D,WAClBvD,KAAMH,EAAMG,SAIlB,SAA4BrC,GACxB,MAAM,CACJyJ,gBAAiB,kBAAMzJ,EAASyJ,MAChCgB,oBAAqB,SAAC1D,EAAM1E,GAAP,OAAgBrC,ENC7C,SAA6B+G,GACzB,OAAO,SAAA/G,GACHA,EAAS,CAACC,KAAM,wBACZG,MAAM,yCAAD,OAA0C2G,EAAKpF,IAAM,CACtD0C,OAAQ,SACRC,QAAS,CACT,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BO,aAAaD,UAEzCvE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC/BF,MAAK,SAAAuJ,GACH,IAAIgB,EAAIhB,EAAEiB,aACN,OAAO7K,EAAS,CAACC,KAAM,cAAe2K,UMbAH,CAAoB1D,KAClEb,OAAQ,kBAAMlG,EAAS,CAACC,KAAM,aAC9ByJ,aAAc,SAAClH,GAAD,OAAYxC,EAAS0J,EAAalH,QAKzCvB,EA3Df,SAA0BE,GAEtB,IASM2J,EAAgB,WACjB3J,EAAMsI,mBAGLsB,EAAe,SAAAhE,GACjB,OACI5F,EAAMsJ,oBAAoB1D,GAC1B5F,EAAMuI,aAAavI,EAAMkB,KAAK0D,eAAiBgB,EAAK4B,mBAK5D,OACI,6BACI,4BAAKxH,EAAMkB,KAAKoB,UAChB,+CAAqBtC,EAAMkB,KAAK0D,gBAEhC,oDACI,4BAAQ1E,UAAU,iBAAiBC,QAASwJ,GAExC,0BAAM9I,KAAK,MAAMC,aAAW,WAA5B,iBAEJ,yBAAKZ,UAAU,cA/BJ,WAEnB,GAAIF,EAAMyE,WACN,OAAOzE,EAAMkB,KAAK2I,gBAAgBpI,KAAI,SAAAmE,GAClC,OAAO,kBAAC,GAAD,CAAWhF,IAAKgF,EAAKpF,GAAIoF,KAAMA,EAAM0D,oBAAqBM,EAAcL,mBAAoBI,OA4B9FG,SCrBfC,G,4MAEJC,WAAa,WAEX,EAAKhK,MAAMiK,wBACX,EAAKjK,MAAMkK,oBACX,EAAKlK,MAAMmK,wBACX,EAAKnK,MAAMoK,oBACX,EAAKpK,MAAMqK,wBACX,EAAKrK,MAAMsK,oBACX,EAAKtK,MAAMuK,wBACX,EAAKvK,MAAMwK,oBACX,EAAKxK,MAAMyK,wBACX,EAAKzK,MAAM0K,qB,kEAKXzG,KAAK+F,e,+BAKL,OAEE,kBAAC,IAAD,KACE,yBAAK9J,UAAU,OACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,YAAd,qBAEF,iEACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,KAChB,kBAACxB,GAAD,OAEF,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,UAChB,kBAACxB,GAAD,OAEF,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,YAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,6BACG3G,KAAKjE,MAAMyE,WAAa,kBAAC,EAAD,MAAsB,KAC/C,kBAAC,EAAD,c,GA5CID,aA4EH1E,oBArBf,SAAyBiB,GACvB,MAAO,CACH0D,WAAY1D,EAAM0D,eAIxB,SAA4B5F,GAC1B,MAAO,CACHoL,sBAAuB,kBAAMpL,ExBnCvBE,EAAmB,MAAOL,KwBoChCwL,kBAAmB,kBAAMrL,ExBjCnBU,EAAe,MAAOb,KwBkC5ByL,sBAAuB,kBAAMtL,ExBnBvBE,EAAmB,MAAOL,KwBoBhC0L,kBAAmB,kBAAMvL,ExBjBnBU,EAAe,MAAOb,KwBkB5B2L,sBAAuB,kBAAMxL,ExBjCvBE,EAAmB,MAAOL,KwBkChC4L,kBAAmB,kBAAMzL,ExB/BnBU,EAAe,MAAOb,KwBgC5B6L,sBAAuB,kBAAM1L,ExBjBvBE,EAAmB,MAAOL,KwBkBhC8L,kBAAmB,kBAAM3L,ExBfnBU,EAAe,MAAOb,KwBgB5B+L,sBAAuB,kBAAM5L,ExB/BvBE,EAAmB,MAAOL,KwBgChCgM,kBAAmB,kBAAM7L,ExB7BnBU,EAAe,MAAOb,QwBiCnBoB,CAA6CiK,ICpFxCc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCNSxG,OAZf,WAAyC,IAArB1D,EAAoB,wDAAPmK,EAAO,uCACpC,OAAOA,EAAOpM,MACV,IAAK,SACD,OACU,EAEd,IAAK,UACD,OAAa,EACjB,QAAS,OAAOiC,I,QCsBToK,OA9Bf,WAAuC,IAAlBpK,EAAiB,uDAAX,GAAImK,EAAO,uCAElC,OAAOA,EAAOpM,MACV,IAAK,SACD,OAAaoM,EAAO/J,QACxB,IAAK,UACD,MAAa,GACjB,IAAK,kBACD,OAAa+J,EAAO/J,QACxB,IAAK,yBACD,OAAO,gBAAIJ,GACf,IAAK,gBACD,OAAO,6BAAIA,GAAX,IAAkB6D,eAAgBsG,EAAOtG,iBAC7C,IAAK,wBACD,OAAO,6BAAI7D,GAAX,IAAkBqK,YAAW,IACjC,IAAK,oBACD,OAAeF,EAAOhK,KAC1B,IAAK,wBACD,OAAO,6BAAIH,GAAX,IAAkBqK,YAAY,IAClC,IAAK,cAED,OADAvH,MAAM,kBACC,6BAAI9C,GAAX,IAAkB8I,gBAAgB,GAAD,mBAAM9I,EAAM8I,iBAAZ,CAA6BqB,EAAOtF,SACzE,IAAK,sBACD,OAAO,6BAAI7E,GAAX,IAAkBqK,YAAY,IAClC,IAAK,cACD,OAAO,6BAAIrK,GAAX,IAAkB8I,gBAAiB9I,EAAM8I,gBAAgBf,QAAO,SAAAlD,GAAI,OAAIA,EAAKpF,KAAK0K,EAAOzB,EAAEjJ,QAC/F,QAAS,OAAOO,ICdTsK,OAZf,WAAqD,IAAvBtK,EAAsB,uDAAhB,QAASmK,EAAO,uCAChD,OAAOA,EAAOpM,MACV,IAAK,QACD,MAAa,QACjB,IAAK,UACD,MAAa,UACjB,IAAK,QACD,MAAa,QACjB,QAAS,OAAOiC,ICRpBC,GAAU,CACVsK,IAAK,CAAC7K,KAAM,MAAOD,GAAI,KAAME,MAAO,eAAOlB,UAAW,GAAIF,cAAe,GAAI4J,UAAU,EAAOkC,YAAY,GAC1GG,IAAK,CAAC9K,KAAM,MAAOD,GAAI,KAAME,MAAO,eAAOlB,UAAW,GAAIF,cAAe,GAAI4J,UAAU,EAAOkC,YAAY,GAC1GI,IAAK,CAAC/K,KAAM,MAAOD,GAAI,KAAME,MAAO,eAAOlB,UAAW,GAAIF,cAAe,GAAI4J,UAAU,EAAMkC,YAAY,GACzGK,IAAK,CAAChL,KAAM,MAAOD,GAAI,KAAME,MAAO,eAAOlB,UAAW,GAAIF,cAAe,GAAI4J,UAAU,EAAOkC,YAAY,GAC1GM,IAAK,CAACjL,KAAM,MAAOD,GAAI,KAAME,MAAO,eAAOlB,UAAW,GAAIF,cAAe,GAAI4J,UAAU,EAAOkC,YAAY,IAwJ/FO,OArJf,WAAiD,IAAzB5K,EAAwB,uDAAhBC,GAASkK,EAAO,uCAE5C,OAAOA,EAAOpM,MACV,IAAK,oBACD,OAAO,6BACAiC,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiBrC,UAAU,IAC9BoC,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiBpC,UAAU,IAC9BwC,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBxC,UAAU,IAC9BuC,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBvC,UAAU,IAC9BsC,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBtC,UAAU,MAItC,IAAK,aACD,OAAO,6BACAnI,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiBrC,UAAU,MAEtC,IAAK,aACD,OAAO,6BACAnI,GADP,IAEIyK,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBtC,UAAU,MAEtC,IAAK,aACD,OAAO,6BACAnI,GADP,IAEI0K,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBvC,UAAU,MAEtC,IAAK,aACD,OAAO,6BACAnI,GADP,IAEI2K,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBxC,UAAU,MAEtC,IAAK,aACD,OAAO,6BACAnI,GADP,IAEIuK,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiBpC,UAAU,MAGtC,IAAK,kCACD,OAAO,6BACAnI,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiBH,YAAY,MAExC,IAAK,kCACD,OAAO,6BACArK,GADP,IAEIyK,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBJ,YAAY,MAExC,IAAK,kCACD,OAAO,6BACArK,GADP,IAEI2K,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBN,YAAY,MAExC,IAAK,kCACD,OAAO,6BACArK,GADP,IAEI0K,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBL,YAAY,MAExC,IAAK,kCACD,OAAO,6BACArK,GADP,IAEIuK,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiBF,YAAY,MAGxC,IAAK,8BACD,OAAO,6BACArK,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiBH,YAAY,MAExC,IAAK,8BACD,OAAO,6BACArK,GADP,IAEIyK,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBJ,YAAY,MAExC,IAAK,8BACD,OAAO,6BACArK,GADP,IAEI2K,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBN,YAAY,MAExC,IAAK,8BACG,OAAO,6BACArK,GADP,IAEI0K,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBL,YAAY,MAE5C,IAAK,8BACD,OAAO,6BACArK,GADP,IAEIuK,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiBF,YAAY,MAExC,IAAK,yBACD,OAAO,6BACArK,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiBjM,cAAe4L,EAAO5L,cAAe8L,YAAY,MAE7E,IAAK,yBACD,OAAO,6BACArK,GADP,IAEIyK,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBlM,cAAe4L,EAAO5L,cAAe8L,YAAY,MAE7E,IAAK,yBACD,OAAO,6BACArK,GADP,IAEI2K,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBpM,cAAe4L,EAAO5L,cAAe8L,YAAY,MAG7E,IAAK,yBACD,OAAO,6BACArK,GADP,IAEI0K,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBnM,cAAe4L,EAAO5L,cAAe8L,YAAY,MAE7E,IAAK,yBACD,OAAO,6BACArK,GADP,IAEIuK,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiBhM,cAAe4L,EAAO5L,cAAe8L,YAAY,MAG7E,IAAK,qBACD,OAAO,6BACArK,GADP,IAEIwK,IAAI,6BAAKxK,EAAMwK,KAAZ,IAAiB/L,UAAW0L,EAAO1L,UAAW4L,YAAY,MAGrE,IAAK,qBACD,OAAO,6BACArK,GADP,IAEIyK,IAAI,6BAAKzK,EAAMyK,KAAZ,IAAiBhM,UAAW0L,EAAO1L,UAAW4L,YAAY,MAErE,IAAK,qBACD,OAAO,6BACArK,GADP,IAEI2K,IAAI,6BAAK3K,EAAM2K,KAAZ,IAAiBlM,UAAW0L,EAAO1L,UAAW4L,YAAY,MAErE,IAAK,qBACD,OAAO,6BACArK,GADP,IAEI0K,IAAI,6BAAK1K,EAAM0K,KAAZ,IAAiBjM,UAAW0L,EAAO1L,UAAW4L,YAAY,MAErE,IAAK,qBACD,OAAO,6BACArK,GADP,IAEIuK,IAAI,6BAAKvK,EAAMuK,KAAZ,IAAiB9L,UAAW0L,EAAO1L,UAAW4L,YAAY,MAErE,QAAS,OAAOrK,IClJX6K,GAAcC,aAAgB,CAACpH,cAAYvD,QAAMmK,wBAAsBrK,aCI9E8K,GAAkBhB,OAAOiB,sCAAwCC,KAEjEC,GAAQC,aACZN,GACAE,GAAgBK,aAAgBC,QAGlC/H,QAAQC,IAAI2H,GAAMI,YAElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,QAGJQ,SAASC,eAAe,SN0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3N,MAAK,SAAA4N,GACJA,EAAaC,gBAEdjJ,OAAM,SAAAtB,GACL6B,QAAQ7B,MAAMA,EAAMuB,c","file":"static/js/main.47f9d98d.chunk.js","sourcesContent":["const leagueIds = { EPL: 4328, NFL: 4391, MLB: 4424, NBA: 4387, NHL: 4380 }\n\nfunction selectLeague(league){\n    return (dispatch) => {\n        dispatch({type: 'SWITCHING_LEAGUES'});\n        dispatch({type: `SELECT_${league}`})\n    }\n}\n\nfunction fetchUpcomingGames(league, leagueId){\n    return (dispatch) => {\n        dispatch({type: `START_ADDING_UPCOMING_GAMES_${league}`});\n        fetch(`https://www.thesportsdb.com/api/v1/json/1/eventsnextleague.php?id=${leagueId}`\n            ).then(response => response.json()\n            ).then(events => events.events\n            ).then(upcomingGames => \n                dispatch({type: `ADD_UPCOMING_GAMES_${league}`, upcomingGames})\n            )}\n}\nfunction fetchPastGames(league, leagueId){\n    return (dispatch) => {\n        dispatch({type: `START_ADDING_PAST_GAMES_${league}`});\n        fetch(`https://www.thesportsdb.com/api/v1/json/1/eventspastleague.php?id=${leagueId}`\n            ).then(response => response.json()\n            ).then(events => events.events\n            ).then(pastGames => \n                dispatch({type: `ADD_PAST_GAMES_${league}`, pastGames})\n            ).then()\n    }\n}\n\nfunction selectNFL(){\n    return selectLeague(\"NFL\")\n}\nfunction selectMLB(){\n    return selectLeague(\"MLB\")\n}\nfunction selectNBA(){\n    return selectLeague(\"NBA\")\n}\nfunction selectNHL(){\n    return selectLeague(\"NHL\")\n}\nfunction selectEPL(){\n    return selectLeague(\"EPL\")\n}\n\nfunction fetchUpcomingGamesNFL(){\n    return (fetchUpcomingGames(\"NFL\", leagueIds.NFL))\n}\nfunction fetchPastGamesNFL(){\n    return (fetchPastGames(\"NFL\", leagueIds.NFL))\n}\nfunction fetchUpcomingGamesNBA(){\n    return (fetchUpcomingGames(\"NBA\", leagueIds.NBA))\n}\nfunction fetchPastGamesNBA(){\n    return (fetchPastGames(\"NBA\", leagueIds.NBA))\n}\nfunction fetchUpcomingGamesEPL(){\n    return (fetchUpcomingGames(\"EPL\", leagueIds.EPL))\n}\nfunction fetchPastGamesEPL(){\n    return (fetchPastGames(\"EPL\", leagueIds.EPL))\n}\nfunction fetchUpcomingGamesMLB(){\n    return (fetchUpcomingGames(\"MLB\", leagueIds.MLB))\n}\nfunction fetchPastGamesMLB(){\n    return (fetchPastGames(\"MLB\", leagueIds.MLB))\n}\nfunction fetchUpcomingGamesNHL(){\n    return (fetchUpcomingGames(\"NHL\", leagueIds.NHL))\n}\nfunction fetchPastGamesNHL(){\n    return (fetchPastGames(\"NHL\", leagueIds.NHL))\n}\n\nexport {\n    fetchUpcomingGamesNFL, fetchPastGamesNFL,\n    fetchUpcomingGamesMLB, fetchPastGamesMLB,\n    fetchUpcomingGamesEPL, fetchPastGamesEPL,\n    fetchUpcomingGamesNHL, fetchPastGamesNHL,\n    fetchUpcomingGamesNBA, fetchPastGamesNBA,\n    selectNFL,\n    selectMLB,\n    selectNHL,\n    selectNBA,\n    selectEPL\n\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { showAbout } from '../../redux/actions/mainDisplay'\n\nfunction AboutButton(props) {\n\n    return (\n        <div>\n            <Link to=\"/about\">\n                <button className=\"dropdown-button clickable\" onClick={() => props.aboutOn()}>About\n                </button>\n            </Link>\n        </div>\n    )\n}\n    \n\nfunction mapDispatchToProps(dispatch){\n    return{\n        aboutOn: () => showAbout(dispatch)\n    }\n}\nexport default connect(null, mapDispatchToProps)(AboutButton)","function showAbout(){\n    return dispatch => dispatch({type: \"ABOUT\"})\n}\n\nfunction showProfile(dispatch){\n    dispatch({type: \"PROFILE\"})\n}\n\nfunction showGames(dispatch){\n    dispatch({type: \"GAMES\"})\n}\n\nexport {\n    showAbout,\n    showProfile,\n    showGames\n}","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport { showProfile } from '../../redux/actions/mainDisplay'\n\nfunction UserProfileButton(props) {\n\n    const handleClick = () => {\n        props.profileOn()\n        // aboutOff()\n    }\n\n    return (\n        <div className=\"dropdown\">\n            \n            <Link to='/profile'>\n                <button className=\"dropdown-button clickable\" onClick={handleClick}>\n                    Profile\n                </button>\n            </Link>\n        </div>\n    )\n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        profileOn: () => showProfile(dispatch)\n    }\n}\nexport default connect(null, mapDispatchToProps)(UserProfileButton)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { \n    selectNFL, \n    selectEPL, \n    selectMLB, \n    selectNBA, \n    selectNHL,\n   } from '../../../redux/actions/leagues'\n  \n\nimport { showGames } from '../../../redux/actions/mainDisplay'\n\nfunction LeagueButton(props) { \n    const { id, name, emoji, select } = props\n\n    function handleClick(){\n        props.gamesOn()\n        select()\n    }\n    \n    return (\n\n        <div className=\"button-div\">\n            <Link to=\"/games\">\n                <button className=\"drop-button\" id={id} key={id} onClick={handleClick}> \n                    {name}\n                    <span role=\"img\" aria-label={name}>  {emoji}</span>\n                </button>\n            </Link>\n        </div>\n    )\n    \n}\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        gamesOn: () => showGames(dispatch),\n        selectNFL: () => dispatch(selectNFL()),\n        selectNBA: () => dispatch(selectNBA()),\n        selectNHL: () => dispatch(selectNHL()),\n        selectEPL: () => dispatch(selectEPL()),\n        selectMLB: () => dispatch(selectMLB()),\n    }\n}\nexport default connect(null, mapDispatchToProps)(LeagueButton)","import React from 'react'\nimport LeagueButton from'./LeagueButton'\nimport {connect} from 'react-redux'\nimport {  selectNFL, selectEPL, selectMLB, selectNBA, selectNHL } from '../../../redux/actions/leagues'\n\nfunction LeagueButtons (props) {\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n    \n    const createButtons = () => {\n        return leagueArr.map(league => {\n            return <LeagueButton key={league.id} id={league.id} name={league.name} emoji={league.emoji} select={addSelect(league)} />\n        })\n    }\n    \n    const addSelect = league => {\n        switch(league.id){\n            case 4391 : \n                return props.selectNFL\n            case 4328 : \n                return props.selectEPL\n            case 4424 : \n                return props.selectMLB\n            case 4380 : \n                return props.selectNHL\n            case 4387 : \n                return props.selectNBA\n            default: return null\n        }\n    }\n    return (\n        <div className=\"league-button-container\">\n            {createButtons()}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues\n    }\n  }\n  \n  function mapDispatchToProps(dispatch){\n    return {\n        refreshProfile: (user) => dispatch({type: \"REFRESH_PROFILE\", payload: user}), \n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        selectNFL: () => dispatch(selectNFL()),\n        selectNBA: () => dispatch(selectNBA()),\n        selectNHL: () => dispatch(selectNHL()),\n        selectEPL: () => dispatch(selectEPL()),\n        selectMLB: () => dispatch(selectMLB()),\n    }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueButtons)","import React, { useState } from 'react';\nimport LeagueButtons from './LeagueButtonsContainer';\n\nfunction LeagueDropdown(props) {\n  const [isShown, setIsShown] = useState(false);\n\n  const {leagues, switchLeague, resetProfile, isProfile, aboutOff } = props\n\n\n  return (\n    <div \n      className=\"dropdown\"         \n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n    >\n      <button className=\"dropdown-button\">\n        {!isProfile ? \"Select League\" : \"Make Picks\"}\n      </button>\n      {isShown && (\n        <div>\n          <LeagueButtons leagues={leagues} switchLeague = {switchLeague} resetProfile={resetProfile} aboutOff={aboutOff}/>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LeagueDropdown;","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst loginURL = 'http://localhost:3000/login'\n\nclass Login extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \"\"\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({ [name] : value })\n    }\n\n    addUser = (user) => {\n        this.props.logIn(user)\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        fetch(loginURL, {\n            method: \"POST\", \n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(response => {\n            return response.status === 200 ? response.json() : response.status\n        })\n        .then(result => {\n            if (result.token){\n                this.addUser(result.user)\n                localStorage.setItem(\"token\", result.token) \n                localStorage.setItem(\"user_id\", result.user_id) \n            } else {\n                alert(\"Username or password incorrect\")\n            }\n                \n        }) \n\n        .catch(error => this.setState({error: error.message}))\n\n    }\n    handleError = () => {\n        return (\n            this.state.error ? <p className=\"error-message\">{this.state.error}</p> : null\n        )\n    }\n    render() {\n\n        const { username, password } = this.state\n\n        return (\n            <div className=\"form\">\n                <form className = \"auth-form login\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"username\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"username\"\n                        onChange = {this.handleChange}\n                    />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        placeholder=\"password\"\n                        onChange = {this.handleChange}\n\n                    />\n\n                    <input type=\"submit\" value=\"login\" className=\"auth-button\"/>\n                    {this.state.error ? console.log(this.state.error) : null}\n                </form>\n            </div>\n            \n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        logIn: (user) => dispatch({type: \"LOG_IN\", payload: user})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react'\n\nconst usersURL = 'http://localhost:3000/users'\n\nclass Signup extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        betting_points: 100\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({ [name] : value })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        fetch(usersURL, {\n            method: \"POST\", \n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({user: this.state})\n        })\n        .then(response => response.json())\n        .then(result => {\n            // localStorage.setItem(\"token\", result.token)\n            console.log(result)\n            if (result.message.username){\n                alert(`username ${result.message.username}`)\n            } else if (result.message.password){\n                alert(`password ${result.message.password}`)\n            } else {\n                alert(result.message)\n                localStorage.setItem(\"token\", result.token) \n                localStorage.setItem(\"user_id\", result.user_id) \n                this.props.setisLoginShown(true)\n            }\n        })\n        event.target.reset()\n\n\n    }\n    render() {\n\n        const { username, password } = this.state\n\n        return (\n            <div className=\"form\">\n\n                <form className = \"auth-form signup\" onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"username\"\n                        name=\"username\"\n                        value={username}\n                        placeholder=\"username\"\n                        onChange = {this.handleChange}\n                    />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        placeholder=\"password\"\n                        onChange = {this.handleChange}\n\n                    />\n\n                    <input type=\"submit\" value=\"sign up!\" className=\"auth-button\" />\n                </form>\n            </div>\n            \n        )\n    }\n}\n\nexport default Signup","\nimport React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport LoginForm from './forms/LoginForm'\nimport SignupForm from './forms/SignupForm'\n\nfunction Auth(props) {\n    const [isShown, setIsShown] = useState(false);\n    const [isLoginShown, setisLoginShown] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const toggleShown = () => !isLoggedIn ? setIsShown(!isShown) : logout()\n\n    const toggleLogin = () => setisLoginShown(!isLoginShown)\n\n    const toggleIsLoggedIn = () => {\n        setIsLoggedIn(true)\n    }\n\n    const logout = () => {\n        props.logout()        \n        localStorage.clear()\n        setIsLoggedIn(false)\n        setIsShown(false)\n    }\n\n    const pointer = (event) => {\n        return event.target.style.cursor = \"pointer\"\n    }\n\n    return (\n    <div \n        className=\"dropdown\"         \n    >\n        <button className=\"dropdown-button clickable\" onClick={!props.isLoggedIn ? toggleShown : logout} onMouseOver={event => pointer(event)} >\n        {props.isLoggedIn ? `Log out (${props.user.username})` : \"Login or create account\"}\n        </button>\n        {isShown && !props.isLoggedIn && (\n            <div className=\"forms-container\">\n                {isLoginShown ? <LoginForm toggleIsLoggedIn={toggleIsLoggedIn} setUserProfile={props.setUserProfile}/> : <SignupForm setisLoginShown={setisLoginShown}/>}\n                <button className=\"auth-button\" onClick={toggleLogin}>{isLoginShown ? \"Create an account\" : \"Already have an account?\"}</button>\n            </div>\n        )}\n    </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        logout: () => dispatch({type: \"LOG_OFF\"}),\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport AboutButton from '../navbar-buttons/AboutButton'\nimport UserProfileButton from '../navbar-buttons/UserProfileButton'\nimport LeagueDropdown from '../navbar-buttons/league/LeagueDropdown'\nimport Auth from '../auth/Auth'\n\n\nfunction NavBar(props) {\n\n    return (\n        <div className=\"dropdown-and-forms\">\n            <div className=\"dropdown-container\">\n                <AboutButton />\n                {props.isLoggedIn ? <UserProfileButton  /> : null}\n                <LeagueDropdown />\n                <Auth />\n            </div>\n        </div>\n    )\n}\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn\n    }\n  }\n\n  export default connect(mapStateToProps, null)(NavBar)\n  ","import React from 'react'\n\nexport default function GameCard(props) {\n    const {game} = props\n\n    let homeScore = game.intHomeScore\n    let awayScore = game.intAwayScore\n\n    const checkForScore = () => {\n        const winner = () => {\n            if (homeScore !== awayScore) {\n                \n                return (\n                    homeScore > awayScore ? \n                        <div className=\"score-card\">\n                            <h3><b>{game.strHomeTeam}: {homeScore}</b></h3>\n                            <h4>{game.strAwayTeam}: {awayScore}</h4> \n                        </div> : \n                        <div className=\"score-card\">\n                            <h4>{game.strHomeTeam}: {homeScore}</h4>\n                            <h3><b>{game.strAwayTeam}: {awayScore}</b></h3> \n                        </div>\n                )\n            } else {\n                return(\n                    <div className=\"score-card\">\n                        <p>{game.strHomeTeam}: {homeScore}</p>\n                        <p>{game.strAwayTeam}: {awayScore}</p> \n                    </div>\n                )\n            }\n            \n\n            \n        }\n        if (homeScore && awayScore){\n            return (\n                winner()\n            )\n        } else {\n            return(<p>Outcome will be updated soon</p>)\n        }\n\n    }\n\n    const homeVsAway = () => {\n    let eventDate = <p>{game.dateEvent} at {game.strTime}</p>\n    return (\n        <div className = \"game-card\" key={game.idEvent}>\n        <h3>{game.strEventAlternate}</h3>\n            {eventDate}\n            {checkForScore()}\n        </div>\n    )\n    }\n\n    return (\n        <div className=\"game-card-container\">\n            {homeVsAway()}\n        </div>        \n    )\n}\n","import React from 'react'\nimport CompletedGameCard from '../gamecards/CompletedGameCard'\n\nexport default function PastGameListings(props) {\n\n    const { currentLeague , selectGame } = props\n\n    const gameList = currentLeague.pastGames ? currentLeague.pastGames : []\n\n    const leagueName = currentLeague.name\n\n    const upcomingGamesMessage = <h3>Past {leagueName} games:</h3>\n    const noUpcomingGamesMessage =  <h3 className=\"no-games-message\">No {leagueName} games available on our partner's database: \n                                    <br></br> \n                                    https://www.thesportsdb.com/.\n                                    <br></br> \n                                    Please try another league.\n                                    </h3>\n\n    const games = (\n        gameList.map(game => {\n            return (\n                    <CompletedGameCard game={game} key={game.idEvent}  selectGame= {selectGame} />\n            )\n        }) \n        \n    )\n\n    const checkGames = gameList[0] ? upcomingGamesMessage : noUpcomingGamesMessage\n// \n    return (\n            <div className = \"card-container\">\n                {checkGames}\n                {games}\n            </div>\n    )\n}\n","import React, {useState} from 'react'\n\nexport default function SelectedGame(props) {\n\n    const { game, submitSelectedGame, removeSelectedGame } = props\n\n    const [points, setPoints] = useState(0)\n\n    function handleSubmit(){\n        submitSelectedGame(game)\n    }\n\n    function handleRemove(){\n        removeSelectedGame(game)\n    } \n\n    function addPoints(num) {\n        game.points_allocated = parseInt(game.points_allocated + num)\n        return game \n    }\n\n    const addOnePoint = () => {\n        setPoints(points+1)\n        addPoints(1)\n    }\n    const addFivePoints = () => {\n        setPoints(points+5)\n        addPoints(5)\n    }\n    const addTenPoints = () => {\n        setPoints(points+10)\n        addPoints(10)\n    }\n    return (\n        <div className = \"game-card\" key={game.idEvent}>\n                <p>{game.strEventAlternate}</p>\n                <h3>Selected winner: \n                    <br></br> \n                    {game.selectedWinnerString}\n                </h3>\n                    <button onClick={addOnePoint} className=\"game-button\">Wager 1 point</button>\n                    <button onClick={addFivePoints} className=\"game-button\">Wager 5 points</button>\n                    <button onClick={addTenPoints} className=\"game-button\">Wager 10 points</button>\n                    <br></br>\n                    <button onClick={handleSubmit} className=\"game-button\">Submit Selection</button>\n                    <button onClick={handleRemove} className=\"game-button\">Remove Selection</button>\n                    <p>Points allocated: \n                        {points}\n                    </p>\n                \n                <p>{game.dateEvent} at {game.strTime}</p>\n        </div>   \n    )\n}\n","import React from 'react'\n\nimport SelectedGameCard from '../gamecards/SelectedGameCard'\n\nexport default function SelectedGames (props) {\n    const { selectedGames, submitSelectedGame, removeSelectedGame } = props\n\n    const message = () => selectedGames[0] ? <h3>Your picks: </h3> : <h3>Make a selection</h3>\n\n    const displayGames = () => selectedGames.map(game =>  <SelectedGameCard game={game} submitSelectedGame={submitSelectedGame} removeSelectedGame={removeSelectedGame} key={game.idEvent}/>)\n\n        return (\n            <div>\n                <div className=\"card-container\">\n                    {message()}\n                    {displayGames()}\n                </div>\n            </div>\n        )\n}\n\n","import React from 'react'\n\nexport default function GameCard(props) {\n    const {game, selectGame} = props\n\n    function handleClick(event){\n        game.selectedWinnerId = event.target.id\n        game.selectedWinnerString = event.target.value\n        game.points_allocated = 0\n        return selectGame(game)\n    }\n\n    const homeVsAway = () => {\n        let homeButton = <button className=\"game-button\"onClick={handleClick} id={game.idHomeTeam} value={game.strHomeTeam}>{game.strHomeTeam} (home)</button>\n        let awayButton = <button className=\"game-button\" onClick={handleClick} id={game.idAwayTeam} value={game.strAwayTeam}>{game.strAwayTeam} (away)</button>\n        let americanEvent = game => (parseInt(game.idLeague) === parseInt(4391 || 4424 || 4387 || 4380))\n        let eventDate = <p>{game.dateEvent} at {game.strTime}</p>\n\n        if (americanEvent(game)){\n            return (\n                <div className = \"game-card\" key={game.idEvent}>\n                <h3>{game.strEventAlternate}</h3>\n                    {eventDate}\n                        {awayButton}\n                        {homeButton}\n                </div>\n            )\n        } else {\n            return (\n                <div className = \"game-card\" key={game.idEvent}>\n                    <h3>{game.strHomeTeam} vs. {game.strAwayTeam}</h3>\n                    {eventDate}                    \n                        {homeButton}\n                        {awayButton}\n                </div>\n            )\n\n        }\n    }\n\n    return (\n        <div className=\"game-card-container\">\n            {homeVsAway()}\n        </div>        \n    )\n}\n","import React from 'react'\nimport UpcomingGameCard from '../gamecards/UpcomingGameCard'\n\nexport default function UpcomingGameListings(props) {\n\n    const { currentLeague , selectGame } = props\n\n    const gameList = currentLeague.upcomingGames ? currentLeague.upcomingGames : []\n\n    const leagueName = currentLeague.name\n\n    const upcomingGamesMessage = <h3>Upcoming {leagueName} games:</h3>\n    const noUpcomingGamesMessage =  \n    (<h3 className=\"no-games-message\">Upcoming games temporarily unavailable. Please come back soon!\n    </h3>)\n\n    const games = (\n        gameList.map(game => {\n            return (\n                <UpcomingGameCard game={game} key={game.idEvent}  selectGame= {selectGame} />\n            )\n        })\n    )\n\n    return (\n            <div className = \"card-container\">\n                {gameList[0] ? upcomingGamesMessage : noUpcomingGamesMessage}\n                {games}\n            </div>\n    )\n}\n","// function refreshProfile(user, dispatch){\n//     dispatch({type: \"REFRESH_PROFILE\", payload: user})\n// }\nconst selectedGamesURL = `http://localhost:3000/game_selections`\n// const userURL = `http://localhost:3000/users/${localStorage.user_id}`\n\nfunction confirmUserData(){\n    return (dispatch) => {\n        dispatch({type: \"START_CONFIRMING_USER\"});\n        fetch(`http://localhost:3000/users/${localStorage.user_id}`, {\n            method: \"GET\", \n            headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${localStorage.token}`\n                }\n            }\n        ).then(response => response.json()\n        ).then(user => {\n            dispatch({type: \"CONFIRM_USER\", user })\n        })\n    }\n}\nfunction submitGame(game){\n    return (dispatch) => {\n        dispatch({type: \"START_SUBMITTING_GAME\"});\n        fetch(selectedGamesURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify(game)\n        }).then(response => response.json()\n        ).then(r => {\n            console.log(r)\n            if (r.message === \"Accepted\"){\n                return dispatch({type: \"SUBMIT_GAME\", game: r.game_selection})\n            } else (alert(\"Error submitting picks, please try again.\"))\n        })\n    }        \n}\n\nfunction adjustPoints(newPoints){\n    return (dispatch) => {\n        dispatch({type: \"START_ADJUSTING_POINTS\"});\n        fetch(`http://localhost:3000/users/${localStorage.user_id}`, {\n            method: \"PUT\", \n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify({betting_points: newPoints})\n        }).then(response => response.json()\n        ).then(r => {\n            dispatch({type: \"ADJUST_POINTS\", betting_points: newPoints})\n        })\n\n    }\n}\n\nfunction deleteSubmittedGame(game){\n    return dispatch => {\n        dispatch({type: \"START_DELETING_GAME\"})\n            fetch(`http://localhost:3000/game_selections/${game.id}`, {\n                method: \"DELETE\", \n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n                }\n            }).then(response => response.json()\n        ).then(r => {\n            let g = r.deleted_game\n                return dispatch({type: \"DELETE_GAME\", g})\n            \n        })\n    }\n}\n\nexport {\n    confirmUserData,\n    submitGame,\n    adjustPoints, \n    deleteSubmittedGame\n}","import React, { Component } from 'react'\n\nimport SelectedGameListings from '../GameListings/SelectedGameListings'\nimport UpcomingGameListings from '../GameListings/UpcomingGameListings'\nimport { submitGame, confirmUserData, adjustPoints } from '../../redux/actions/user'\n\nimport { connect } from 'react-redux'\n\nclass UpcomingAndSelected extends Component {\n    state = {\n        selectedGames: []\n    }\n\n    selectGame = (game) => {\n        if(!this.state.selectedGames.find(theGame => game.idEvent === theGame.idEvent)){\n          this.setState({\n            selectedGames: [...this.state.selectedGames, game]\n          })\n        } else {\n          this.setState({\n            selectedGames: [...this.state.selectedGames]\n          }) \n        }\n      }\n    \n    removeSelectedGame = (game) => {\n    let newSelectedGames = this.state.selectedGames.filter(selectedGame => game.idEvent !== selectedGame.idEvent)\n    this.setState({\n        selectedGames: newSelectedGames\n    })\n    }\n\n\n  submitSelectedGame = (game) => {\n    let newPoints = this.props.user.betting_points - game.points_allocated\n    if (this.props.isLoggedIn){\n      if (newPoints >= 0){\n        return (\n          this.props.submitGame(game),\n          this.props.adjustPoints(newPoints),\n          this.removeSelectedGame(game)\n        )\n      } else {\n        alert(\"Not enough points for this selection\")\n    }\n  } else {alert(\"Please log in to make selections.\")}\n}\n      // console.log(\"game\", game)\n      // console.log(\"beting points\", this.props.user.betting_points)\n      // console.log(\"newPoints\", this.props.user.betting_points - game.betting_points)\n    //   fetch(selectedGamesURL, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"Authorization\": `Bearer ${localStorage.token}`\n    //     },\n    //     body: JSON.stringify(game)\n    //   }).then(response=> response.json()\n    //   ).then(console.log)\n    // } else {\n    //   alert(\"Please log in to submit your picks\")\n    // }\n  \n  //   if (this.props.isLoggedIn){\n  //     if (this.props.user.betting_points - game.betting_points >= 0){\n  //       fetch(selectedGamesURL, {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           \"Authorization\": `Bearer ${localStorage.token}`\n  //         },\n  //         body: JSON.stringify(game)\n  //       })\n  //       .then(response => response.json())\n  //       .then(result => {\n  //         if (result.message === \"Accepted\"){\n  //           return (\n  //             // alert(\"Selection submitted\"),\n  //             // this.removeSelectedGame(game),\n  //             this.props.adjustUserBettingPoints(this.props.user.betting_points - game.betting_points)\n  //             // this.props.refreshProfile()\n  //           )\n  //         } else {\n  //           alert(\"Failed to submit, try refreshing the page\")\n  //         } \n  //       })\n  //     } else alert(\"Not enough betting points to make a pick.\")\n  //   } else {\n  //     alert(\"Log in to submit your picks\")\n  //   }\n  // }\n\n    \n    render() {\n        return (\n            <>\n                <UpcomingGameListings currentLeague = {this.props.currentLeague} selectGame= {this.selectGame} />\n                <SelectedGameListings selectedGames={this.state.selectedGames} submitSelectedGame={this.submitSelectedGame} removeSelectedGame={this.removeSelectedGame}/>\n            </>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state){\n  return {\n      isLoggedIn: state.isLoggedIn,\n      user: state.user,\n\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return {\n      confirmUserData: (user) => dispatch(confirmUserData(user)),\n      submitGame: (game) => dispatch(submitGame(game)),\n      adjustPoints: (points) => dispatch(adjustPoints(points)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpcomingAndSelected)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CompletedGameListings from '../GameListings/CompletedGameListings'\nimport UpcomingAndSelectedGamesContainer from './UpcomingAndSelectedGamesContainer'\n\nfunction AllGamesContainer(props) {\n\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n\n    let currentLeague = leagueArr.find(league => league.selected===true)\n\n    return (\n        <div className=\"all-games-container\">\n            <CompletedGameListings currentLeague = {currentLeague} />\n            <UpcomingAndSelectedGamesContainer currentLeague = {currentLeague} adjustUserBettingPoints={props.adjustUserBettingPoints} />\n\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues,\n        isLoggedIn: state.isLoggedIn,\n    }\n  }\nfunction mapDispatchToProps(dispatch){\n    return {\n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGamesContainer)","import React from 'react'\nimport { connect } from 'react-redux'\n\nfunction LoggedOnDisplay(props) {\n    return (\n        <div>\n        \n            <h4>Your available betting points: {props.user.betting_points}</h4>\n            \n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        user: state.user, \n    }\n}\n\nexport default connect(mapStateToProps, null)(LoggedOnDisplay)","import React from 'react'\n\nexport default function AboutPage() {\n    return (\n        <div>\n            {/* <h1 className=\"about-h1\"> This is a website made by broke gamblers, for broke gamblers.</h1> */}\n            <h1 className=\"about-h1\">Instructions:</h1>\n            <p>First, you will want to create an account. You will be given 100 betting points. \n                These are fictitious units with no monetary value. (But a heck of a lot of pride value!)</p>\n            <p>Use your betting points to bet on your favorite sport! (Provided that sport is soccer, basketball, baseball, hockey, or football)</p>\n            <p>Scroll over the \"select league\" dropdown at the top of this page and choose a league.</p>\n            <p>Next, browse through the \"Upcoming Games\" in your selected league and choose a winner for any game in which you are confident about the outcome.</p>\n            <p>After you select a game, the game will appear on the right side of the page. Here, choose the amount of betting points you'd like to spend.</p>\n            <p>This is a <b>\"NO ODDS CASINO\"</b> meaning regardless of the point spread, if you win your bet you will win the amount of betting points you placed on that game.</p>\n            <p>Finally, select your profile at the top of the page to see your submitted games and the points you bet on them.</p>\n            <p>We get our sports data through a crowd-sourced database. Please be patient with the results.</p>\n            <h3>Speaking of our sports data, head on over to <a href=\"https://www.thesportsdb.com/\">https://www.thesportsdb.com/</a> and support them! </h3>\n            <h1 className=\"about-h1\"> GOOD LUCK AND MAY THE BETTING POINTS BE EVER IN YOUR FAVOR</h1>\n        </div>\n\n    )\n}\n","import React from 'react'\n\nexport default function SelectedGame(props) {\n\n    const { game, deleteSubmittedGame, refreshUserProfile} = props\n\n    function handleRemove(){\n        return (\n            deleteSubmittedGame(game),\n            refreshUserProfile()\n        )\n    } \n    \n    return (\n        <div className = \"game-card\" key={game.idEvent}>\n                <p>{game.strEventAlternate}</p>\n                <h2>Selected winner: \n                    <br></br> \n                    {game.selectedWinnerString ? game.selectedWinnerString : \"No winner\"}\n                    {game.completed ? <p>COMPLETED</p> : null}\n                </h2>\n                <h4>Allocated points: {game.points_allocated}</h4>\n                <button onClick={handleRemove} className=\"game-button\">Remove Selection</button>\n                <p>{game.dateEvent} at {game.strTime}</p>\n        </div>   \n    )\n}\n","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport UserPicks from '../gamecards/UserPicks'\nimport { confirmUserData, deleteSubmittedGame, adjustPoints } from '../../redux/actions/user'\n\nfunction ProfileContainer(props) {\n\n    const gameSelections = () => {\n        \n        if (props.isLoggedIn){\n            return props.user.game_selections.map(game => {\n                return <UserPicks key={game.id} game={game} deleteSubmittedGame={handleDelete} refreshUserProfile={handleRefresh}/>\n            })\n        }\n    }\n \n    const handleRefresh = () => {\n         props.confirmUserData()\n    }\n\n    const handleDelete = game => {\n        return (\n            props.deleteSubmittedGame(game), \n            props.adjustPoints(props.user.betting_points + game.points_allocated)\n        )\n    }\n\n\n    return (\n        <div>\n            <h1>{props.user.username}</h1>\n            <h4>Betting points: {props.user.betting_points}</h4>\n            \n            <section>Your selections:\n                <button className=\"refresh-button\" onClick={handleRefresh}> \n                    \n                    <span role=\"img\" aria-label=\"refresh\">🔄</span>\n                </button>\n                <div className=\"user-games\">\n                    {gameSelections()}\n                </div>\n            </section>\n        </div>\n    )\n}\n\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n  }\n\n  function mapDispatchToProps(dispatch){\n      return{\n        confirmUserData: () => dispatch(confirmUserData()), \n        deleteSubmittedGame: (game, user) => dispatch(deleteSubmittedGame(game, user)), \n        logout: () => dispatch({type: \"LOG_OFF\"}),\n        adjustPoints: (points) => dispatch(adjustPoints(points)),\n\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)\n\n  \n  ","import React, { Component } from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { \n  fetchUpcomingGamesNFL, fetchPastGamesNFL,\n  fetchUpcomingGamesMLB, fetchPastGamesMLB,\n  fetchUpcomingGamesEPL, fetchPastGamesEPL,\n  fetchUpcomingGamesNHL, fetchPastGamesNHL,\n  fetchUpcomingGamesNBA, fetchPastGamesNBA,\n } from './redux/actions/leagues'\n\nimport NavBar from './components/containers/NavBar'\nimport AllGamesContainer from './components/containers/AllGamesContainer'\nimport LoggedOnDisplay from './components/user/LoggedOnDisplay'\nimport AboutPage from './components/AboutPage'\nimport Profile from './components/user/ProfileContainer';\n\nclass App extends Component {\n\n  fetchGames = () => {\n      \n    this.props.fetchUpcomingGamesNFL()\n    this.props.fetchPastGamesNFL()\n    this.props.fetchUpcomingGamesMLB()\n    this.props.fetchPastGamesMLB()\n    this.props.fetchUpcomingGamesNBA()\n    this.props.fetchPastGamesNBA()\n    this.props.fetchUpcomingGamesNHL()\n    this.props.fetchPastGamesNHL()\n    this.props.fetchUpcomingGamesEPL()\n    this.props.fetchPastGamesEPL()\n      \n  }\n\n  componentDidMount(){\n    this.fetchGames()\n  }\n\n  render(){\n\n    return (\n\n      <Router>\n        <div className=\"App\">\n          <div className=\"headline-container\">\n            <h1 className=\"headline\" >Sports Predictor</h1>\n          </div>\n          <p>Test your sports betting abilities</p>\n          <NavBar />\n          <Route exact path=\"/\">\n            <AboutPage />\n          </Route> \n          <Route exact path=\"/about\">\n            <AboutPage />\n          </Route> \n          <Route exact path=\"/profile\">\n            <Profile />\n          </Route> \n          <Route exact path=\"/games\">\n            <div>\n              {this.props.isLoggedIn ? <LoggedOnDisplay /> : null}\n              <AllGamesContainer />\n            </div>\n          </Route>\n\n        </div>\n      </Router>\n      \n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n      isLoggedIn: state.isLoggedIn,\n      }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n      fetchUpcomingGamesNFL: () => dispatch(fetchUpcomingGamesNFL()),\n      fetchPastGamesNFL: () => dispatch(fetchPastGamesNFL()),\n      fetchUpcomingGamesMLB: () => dispatch(fetchUpcomingGamesMLB()),\n      fetchPastGamesMLB: () => dispatch(fetchPastGamesMLB()),\n      fetchUpcomingGamesNBA: () => dispatch(fetchUpcomingGamesNBA()),\n      fetchPastGamesNBA: () => dispatch(fetchPastGamesNBA()),\n      fetchUpcomingGamesNHL: () => dispatch(fetchUpcomingGamesNHL()),\n      fetchPastGamesNHL: () => dispatch(fetchPastGamesNHL()),\n      fetchUpcomingGamesEPL: () => dispatch(fetchUpcomingGamesEPL()),\n      fetchPastGamesEPL: () => dispatch(fetchPastGamesEPL()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function isLoggedIn(state=false, action){\n    switch(action.type){\n        case \"LOG_IN\": \n            return (\n                state=true\n            )\n        case \"LOG_OFF\": \n            return state=false\n        default: return state\n    }\n\n}\nexport default isLoggedIn","function userReducer(state={}, action){\n\n    switch(action.type){\n        case \"LOG_IN\" : \n            return state=action.payload;\n        case \"LOG_OFF\" : \n            return state={}\n        case \"REFRESH_PROFILE\" : \n            return state=action.payload\n        case \"START_ADJUSTING_POINTS\" : \n            return {...state}\n        case \"ADJUST_POINTS\" : \n            return {...state, betting_points: action.betting_points}  \n        case \"START_REQUESTING_DATA\" : \n            return {...state, requesting:true}\n        case \"CONFIRM_USER_DATA\" : \n            return state = action.user\n        case \"START_SUBMITTING_GAME\" : \n            return {...state, requesting: true}\n        case \"SUBMIT_GAME\" : \n            alert(\"Game submitted\")\n            return {...state, game_selections: [...state.game_selections, action.game]}\n        case \"START_DELETING_GAME\" : \n            return {...state, requesting: true}\n        case \"DELETE_GAME\" : \n            return {...state, game_selections: state.game_selections.filter(game => game.id!==action.g.id)}\n        default: return state\n    }\n}\n\nexport default userReducer\n\n","function mainContainerDisplay(state=\"about\", action){\n    switch(action.type){\n        case \"ABOUT\" : \n            return state=\"about\"\n        case \"PROFILE\" : \n            return state=\"profile\"\n        case \"GAMES\" : \n            return state=\"games\"\n        default: return state\n    }\n}\n\nexport default mainContainerDisplay","let leagues = { \n    EPL: {name: 'EPL', id: 4328, emoji: '⚽️' , pastGames: [], upcomingGames: [], selected: false, requesting: false},\n    NFL: {name: 'NFL', id: 4391, emoji: '🏈' , pastGames: [], upcomingGames: [], selected: false, requesting: false},\n    MLB: {name: 'MLB', id: 4424, emoji: '⚾️' , pastGames: [], upcomingGames: [], selected: true, requesting: false},\n    NHL: {name: 'NHL', id: 4380, emoji: '🏒' , pastGames: [], upcomingGames: [], selected: false, requesting: false},\n    NBA: {name: 'NBA', id: 4387, emoji: '🏀' , pastGames: [], upcomingGames: [], selected: false, requesting: false}\n}\n\nfunction leaguesReducer(state = leagues, action){\n\n    switch(action.type){\n        case 'SWITCHING_LEAGUES' : \n            return {\n                ...state, \n                NFL: {...state.NFL, selected: false },             \n                EPL: {...state.EPL, selected: false },\n                NBA: {...state.NBA, selected: false },\n                NHL: {...state.NHL, selected: false },\n                MLB: {...state.MLB, selected: false },\n            }\n        \n            \n        case 'SELECT_NFL':\n            return {\n                ...state, \n                NFL: {...state.NFL, selected: true}\n            }\n        case 'SELECT_MLB':\n            return {\n                ...state, \n                MLB: {...state.MLB, selected: true}\n            }\n        case 'SELECT_NHL':\n            return {\n                ...state, \n                NHL: {...state.NHL, selected: true}\n            }\n        case 'SELECT_NBA':\n            return {\n                ...state, \n                NBA: {...state.NBA, selected: true}\n            }\n        case 'SELECT_EPL':\n            return {\n                ...state, \n                EPL: {...state.EPL, selected: true}\n            }\n        \n        case 'START_ADDING_UPCOMING_GAMES_NFL': \n            return {\n                ...state, \n                NFL: {...state.NFL, requesting: true },\n            }\n        case 'START_ADDING_UPCOMING_GAMES_MLB': \n            return {\n                ...state, \n                MLB: {...state.MLB, requesting: true },\n            }\n        case 'START_ADDING_UPCOMING_GAMES_NBA': \n            return {\n                ...state, \n                NBA: {...state.NBA, requesting: true },\n            }\n        case 'START_ADDING_UPCOMING_GAMES_NHL': \n            return {\n                ...state, \n                NHL: {...state.NHL, requesting: true },\n            }\n        case 'START_ADDING_UPCOMING_GAMES_EPL': \n            return {\n                ...state, \n                EPL: {...state.EPL, requesting: true },\n            }\n        \n        case 'START_ADDING_PAST_GAMES_NFL': \n            return {\n                ...state, \n                NFL: {...state.NFL, requesting: true },\n            }\n        case 'START_ADDING_PAST_GAMES_MLB': \n            return {\n                ...state, \n                MLB: {...state.MLB, requesting: true },\n            }\n        case 'START_ADDING_PAST_GAMES_NBA': \n            return {\n                ...state, \n                NBA: {...state.NBA, requesting: true },\n            }\n        case 'START_ADDING_PAST_GAMES_NHL': \n                return {\n                    ...state, \n                    NHL: {...state.NHL, requesting: true },\n                }\n        case 'START_ADDING_PAST_GAMES_EPL': \n            return {\n                ...state, \n                EPL: {...state.EPL, requesting: true },\n            }\n        case 'ADD_UPCOMING_GAMES_NFL': \n            return {\n                ...state, \n                NFL: {...state.NFL, upcomingGames: action.upcomingGames, requesting: false },\n            }\n        case 'ADD_UPCOMING_GAMES_MLB': \n            return {\n                ...state, \n                MLB: {...state.MLB, upcomingGames: action.upcomingGames, requesting: false },\n            }\n        case 'ADD_UPCOMING_GAMES_NBA': \n            return {\n                ...state, \n                NBA: {...state.NBA, upcomingGames: action.upcomingGames, requesting: false },\n            }\n        \n        case 'ADD_UPCOMING_GAMES_NHL': \n            return {\n                ...state, \n                NHL: {...state.NHL, upcomingGames: action.upcomingGames, requesting: false },\n            }\n        case 'ADD_UPCOMING_GAMES_EPL': \n            return {\n                ...state, \n                EPL: {...state.EPL, upcomingGames: action.upcomingGames, requesting: false },\n            }\n        \n        case 'ADD_PAST_GAMES_NFL': \n            return {\n                ...state, \n                NFL: {...state.NFL, pastGames: action.pastGames, requesting: false },\n            }\n        \n        case 'ADD_PAST_GAMES_MLB': \n            return {\n                ...state, \n                MLB: {...state.MLB, pastGames: action.pastGames, requesting: false },\n            }\n        case 'ADD_PAST_GAMES_NBA': \n            return {\n                ...state, \n                NBA: {...state.NBA, pastGames: action.pastGames, requesting: false },\n            }\n        case 'ADD_PAST_GAMES_NHL': \n            return {\n                ...state, \n                NHL: {...state.NHL, pastGames: action.pastGames, requesting: false },\n            }\n        case 'ADD_PAST_GAMES_EPL': \n            return {\n                ...state, \n                EPL: {...state.EPL, pastGames: action.pastGames, requesting: false },\n            }\n        default: return state\n\n    }\n}\n\nexport default leaguesReducer","import { combineReducers } from 'redux'\nimport isLoggedIn from './isLoggedIn'\nimport user from './user'\nimport mainContainerDisplay from './mainContainerDisplay'\nimport leagues from './leagues'\n\nexport const rootReducer = combineReducers({isLoggedIn, user, mainContainerDisplay, leagues })\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './redux/reducers/index'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nconsole.log(store.getState())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}