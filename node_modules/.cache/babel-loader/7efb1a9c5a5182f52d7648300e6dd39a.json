{"ast":null,"code":"var _jsxFileName = \"/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoginForm from './forms/LoginForm';\nimport SignupForm from './forms/SignupForm';\n\nfunction Auth(props) {\n  const [isShown, setIsShown] = useState(false);\n  const [isLoginShown, setisLoginShown] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const toggleShown = () => !isLoggedIn ? setIsShown(!isShown) : logout();\n\n  const toggleLogin = () => setisLoginShown(!isLoginShown);\n\n  const toggleIsLoggedIn = () => {\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    props.logout();\n    localStorage.clear();\n    setIsLoggedIn(false);\n    setIsShown(false);\n  };\n\n  const pointer = event => {\n    return event.target.style.cursor = \"pointer\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dropdown-button clickable\",\n    onClick: !props.isLoggedIn ? toggleShown : logout,\n    onMouseOver: event => pointer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.isLoggedIn ? `Log out (${props.user.username})` : \"Login or create account\"), isShown && !props.isLoggedIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forms-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, isLoginShown ? /*#__PURE__*/React.createElement(LoginForm, {\n    toggleIsLoggedIn: toggleIsLoggedIn,\n    setUserProfile: props.setUserProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(SignupForm, {\n    setisLoginShown: setisLoginShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 122\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button\",\n    onClick: toggleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, isLoginShown ? \"Create an account\" : \"Already have an account?\")));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch({\n      type: \"LOG_OFF\"\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/auth/Auth.js"],"names":["React","useState","connect","LoginForm","SignupForm","Auth","props","isShown","setIsShown","isLoginShown","setisLoginShown","isLoggedIn","setIsLoggedIn","toggleShown","logout","toggleLogin","toggleIsLoggedIn","localStorage","clear","pointer","event","target","style","cursor","user","username","setUserProfile","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMY,WAAW,GAAG,MAAM,CAACF,UAAD,GAAcH,UAAU,CAAC,CAACD,OAAF,CAAxB,GAAqCO,MAAM,EAArE;;AAEA,QAAMC,WAAW,GAAG,MAAML,eAAe,CAAC,CAACD,YAAF,CAAzC;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAME,MAAM,GAAG,MAAM;AACjBR,IAAAA,KAAK,CAACQ,MAAN;AACAG,IAAAA,YAAY,CAACC,KAAb;AACAN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD;;AAOA,QAAMW,OAAO,GAAIC,KAAD,IAAW;AACvB,WAAOA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,SAAnC;AACH,GAFD;;AAIA,sBACA;AACI,IAAA,SAAS,EAAC,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,CAACjB,KAAK,CAACK,UAAP,GAAoBE,WAApB,GAAkCC,MAAzF;AAAiG,IAAA,WAAW,EAAEM,KAAK,IAAID,OAAO,CAACC,KAAD,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,KAAK,CAACK,UAAN,GAAoB,YAAWL,KAAK,CAACkB,IAAN,CAAWC,QAAS,GAAnD,GAAwD,yBADzD,CAHJ,EAMKlB,OAAO,IAAI,CAACD,KAAK,CAACK,UAAlB,iBACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,YAAY,gBAAG,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAEO,gBAA7B;AAA+C,IAAA,cAAc,EAAEV,KAAK,CAACoB,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA4F,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAEhB,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7G,eAEI;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAEK,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDN,YAAY,GAAG,mBAAH,GAAyB,0BAA5F,CAFJ,CAPR,CADA;AAeH;;AAED,SAASkB,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AACHjB,IAAAA,UAAU,EAAEiB,KAAK,CAACjB,UADf;AAEHa,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AAFT,GAAP;AAIH;;AAED,SAASK,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AACHhB,IAAAA,MAAM,EAAE,MAAMgB,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AADnB,GAAP;AAIH;;AAED,eAAe7B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,IAA7C,CAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport LoginForm from './forms/LoginForm'\nimport SignupForm from './forms/SignupForm'\n\nfunction Auth(props) {\n    const [isShown, setIsShown] = useState(false);\n    const [isLoginShown, setisLoginShown] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const toggleShown = () => !isLoggedIn ? setIsShown(!isShown) : logout()\n\n    const toggleLogin = () => setisLoginShown(!isLoginShown)\n\n    const toggleIsLoggedIn = () => {\n        setIsLoggedIn(true)\n    }\n\n    const logout = () => {\n        props.logout()        \n        localStorage.clear()\n        setIsLoggedIn(false)\n        setIsShown(false)\n    }\n\n    const pointer = (event) => {\n        return event.target.style.cursor = \"pointer\"\n    }\n\n    return (\n    <div \n        className=\"dropdown\"         \n    >\n        <button className=\"dropdown-button clickable\" onClick={!props.isLoggedIn ? toggleShown : logout} onMouseOver={event => pointer(event)} >\n        {props.isLoggedIn ? `Log out (${props.user.username})` : \"Login or create account\"}\n        </button>\n        {isShown && !props.isLoggedIn && (\n            <div className=\"forms-container\">\n                {isLoginShown ? <LoginForm toggleIsLoggedIn={toggleIsLoggedIn} setUserProfile={props.setUserProfile}/> : <SignupForm setisLoginShown={setisLoginShown}/>}\n                <button className=\"auth-button\" onClick={toggleLogin}>{isLoginShown ? \"Create an account\" : \"Already have an account?\"}</button>\n            </div>\n        )}\n    </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        logout: () => dispatch({type: \"LOG_OFF\"}),\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n"]},"metadata":{},"sourceType":"module"}