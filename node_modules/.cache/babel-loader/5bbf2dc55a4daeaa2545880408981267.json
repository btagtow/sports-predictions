{"ast":null,"code":"var _jsxFileName = \"/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/navbar-buttons/league/LeagueButtonsContainer.js\";\nimport React from 'react';\nimport LeagueButton from './LeagueButton';\nimport { connect } from 'react-redux';\nimport { selectNFL, selectEPL, selectMLB, selectNBA, selectNHL } from '../../../redux/actions/leagues';\n\nfunction LeagueButtons(props) {\n  let leagueArr = [];\n\n  for (let league in props.leagues) {\n    leagueArr.push(props.leagues[league]);\n  }\n\n  const createButtons = () => {\n    return leagueArr.map(league => {\n      return /*#__PURE__*/React.createElement(LeagueButton, {\n        key: league.id,\n        id: league.id,\n        name: league.name,\n        emoji: league.emoji,\n        select: addSelect(league),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      });\n    });\n  };\n\n  const addSelect = league => {\n    switch (league.id) {\n      case 4391:\n        return props.selectNFL;\n\n      case 4328:\n        return props.selectEPL;\n\n      case 4424:\n        return props.selectMLB;\n\n      case 4380:\n        return props.selectNHL;\n\n      case 4387:\n        return props.selectNBA;\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, createButtons());\n}\n\nfunction mapStateToProps(state) {\n  return {\n    leagues: state.leagues\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    refreshProfile: user => dispatch({\n      type: \"REFRESH_PROFILE\",\n      payload: user\n    }),\n    adjustUserBettingPoints: points => dispatch({\n      type: \"ADJUST_POINTS\",\n      payload: points\n    }),\n    selectNFL: () => dispatch(selectNFL()),\n    selectNBA: () => dispatch(selectNBA()),\n    selectNHL: () => dispatch(selectNHL()),\n    selectEPL: () => dispatch(selectEPL()),\n    selectMLB: () => dispatch(selectMLB())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueButtons);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/navbar-buttons/league/LeagueButtonsContainer.js"],"names":["React","LeagueButton","connect","selectNFL","selectEPL","selectMLB","selectNBA","selectNHL","LeagueButtons","props","leagueArr","league","leagues","push","createButtons","map","id","name","emoji","addSelect","mapStateToProps","state","mapDispatchToProps","dispatch","refreshProfile","user","type","payload","adjustUserBettingPoints","points"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAwB,gBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAUC,SAAV,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,SAAtD,QAAuE,gCAAvE;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAM,IAAIC,MAAV,IAAoBF,KAAK,CAACG,OAA1B,EAAmC;AAC/BF,IAAAA,SAAS,CAACG,IAAV,CAAeJ,KAAK,CAACG,OAAN,CAAcD,MAAd,CAAf;AACH;;AAED,QAAMG,aAAa,GAAG,MAAM;AACxB,WAAOJ,SAAS,CAACK,GAAV,CAAcJ,MAAM,IAAI;AAC3B,0BAAO,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,MAAM,CAACK,EAA1B;AAA8B,QAAA,EAAE,EAAEL,MAAM,CAACK,EAAzC;AAA6C,QAAA,IAAI,EAAEL,MAAM,CAACM,IAA1D;AAAgE,QAAA,KAAK,EAAEN,MAAM,CAACO,KAA9E;AAAqF,QAAA,MAAM,EAAEC,SAAS,CAACR,MAAD,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,QAAMQ,SAAS,GAAGR,MAAM,IAAI;AACxB,YAAOA,MAAM,CAACK,EAAd;AACI,WAAK,IAAL;AACI,eAAOP,KAAK,CAACN,SAAb;;AACJ,WAAK,IAAL;AACI,eAAOM,KAAK,CAACL,SAAb;;AACJ,WAAK,IAAL;AACI,eAAOK,KAAK,CAACJ,SAAb;;AACJ,WAAK,IAAL;AACI,eAAOI,KAAK,CAACF,SAAb;;AACJ,WAAK,IAAL;AACI,eAAOE,KAAK,CAACH,SAAb;;AACJ;AAAS,eAAO,IAAP;AAXb;AAaH,GAdD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,aAAa,EADlB,CADJ;AAKH;;AAED,SAASM,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AACHT,IAAAA,OAAO,EAAES,KAAK,CAACT;AADZ,GAAP;AAGD;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAGC,IAAD,IAAUF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAD/B;AAEHG,IAAAA,uBAAuB,EAAGC,MAAD,IAAYN,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,eAAP;AAAwBC,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAF1C;AAGH1B,IAAAA,SAAS,EAAE,MAAMoB,QAAQ,CAACpB,SAAS,EAAV,CAHtB;AAIHG,IAAAA,SAAS,EAAE,MAAMiB,QAAQ,CAACjB,SAAS,EAAV,CAJtB;AAKHC,IAAAA,SAAS,EAAE,MAAMgB,QAAQ,CAAChB,SAAS,EAAV,CALtB;AAMHH,IAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAACnB,SAAS,EAAV,CANtB;AAOHC,IAAAA,SAAS,EAAE,MAAMkB,QAAQ,CAAClB,SAAS,EAAV;AAPtB,GAAP;AASD;;AAGH,eAAeH,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React from 'react'\nimport LeagueButton from'./LeagueButton'\nimport {connect} from 'react-redux'\nimport {  selectNFL, selectEPL, selectMLB, selectNBA, selectNHL } from '../../../redux/actions/leagues'\n\nfunction LeagueButtons (props) {\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n    \n    const createButtons = () => {\n        return leagueArr.map(league => {\n            return <LeagueButton key={league.id} id={league.id} name={league.name} emoji={league.emoji} select={addSelect(league)} />\n        })\n    }\n    \n    const addSelect = league => {\n        switch(league.id){\n            case 4391 : \n                return props.selectNFL\n            case 4328 : \n                return props.selectEPL\n            case 4424 : \n                return props.selectMLB\n            case 4380 : \n                return props.selectNHL\n            case 4387 : \n                return props.selectNBA\n            default: return null\n        }\n    }\n    return (\n        <div className=\"league-button-container\">\n            {createButtons()}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues\n    }\n  }\n  \n  function mapDispatchToProps(dispatch){\n    return {\n        refreshProfile: (user) => dispatch({type: \"REFRESH_PROFILE\", payload: user}), \n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        selectNFL: () => dispatch(selectNFL()),\n        selectNBA: () => dispatch(selectNBA()),\n        selectNHL: () => dispatch(selectNHL()),\n        selectEPL: () => dispatch(selectEPL()),\n        selectMLB: () => dispatch(selectMLB()),\n    }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueButtons)"]},"metadata":{},"sourceType":"module"}