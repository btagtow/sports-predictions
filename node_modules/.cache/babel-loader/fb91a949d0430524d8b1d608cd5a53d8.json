{"ast":null,"code":"import React from'react';import CompletedGameCard from'../gamecards/CompletedGameCard';export default function PastGameListings(props){var currentLeague=props.currentLeague,selectGame=props.selectGame;var gameList=currentLeague.pastGames?currentLeague.pastGames:[];var leagueName=currentLeague.name;var upcomingGamesMessage=/*#__PURE__*/React.createElement(\"h3\",null,\"Past \",leagueName,\" games:\");var noUpcomingGamesMessage=/*#__PURE__*/React.createElement(\"h3\",{className:\"no-games-message\"},\"No \",leagueName,\" games available on our partner's database:\",/*#__PURE__*/React.createElement(\"br\",null),\"https://www.thesportsdb.com/.\",/*#__PURE__*/React.createElement(\"br\",null),\"Please try another league.\");var games=gameList.map(function(game){return/*#__PURE__*/React.createElement(CompletedGameCard,{game:game,key:game.idEvent,selectGame:selectGame});});var checkGames=gameList[0]?upcomingGamesMessage:noUpcomingGamesMessage;// \nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"card-container\"},checkGames,games);}","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/GameListings/CompletedGameListings.js"],"names":["React","CompletedGameCard","PastGameListings","props","currentLeague","selectGame","gameList","pastGames","leagueName","name","upcomingGamesMessage","noUpcomingGamesMessage","games","map","game","idEvent","checkGames"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gCAA9B,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,IAEpCC,CAAAA,aAFoC,CAELD,KAFK,CAEpCC,aAFoC,CAEpBC,UAFoB,CAELF,KAFK,CAEpBE,UAFoB,CAI5C,GAAMC,CAAAA,QAAQ,CAAGF,aAAa,CAACG,SAAd,CAA0BH,aAAa,CAACG,SAAxC,CAAoD,EAArE,CAEA,GAAMC,CAAAA,UAAU,CAAGJ,aAAa,CAACK,IAAjC,CAEA,GAAMC,CAAAA,oBAAoB,cAAG,sCAAUF,UAAV,WAA7B,CACA,GAAMG,CAAAA,sBAAsB,cAAI,0BAAI,SAAS,CAAC,kBAAd,QAAqCH,UAArC,4DACA,8BADA,8CAGA,8BAHA,8BAAhC,CAOA,GAAMI,CAAAA,KAAK,CACPN,QAAQ,CAACO,GAAT,CAAa,SAAAC,IAAI,CAAI,CACjB,mBACQ,oBAAC,iBAAD,EAAmB,IAAI,CAAEA,IAAzB,CAA+B,GAAG,CAAEA,IAAI,CAACC,OAAzC,CAAmD,UAAU,CAAGV,UAAhE,EADR,CAGH,CAJD,CADJ,CASA,GAAMW,CAAAA,UAAU,CAAGV,QAAQ,CAAC,CAAD,CAAR,CAAcI,oBAAd,CAAqCC,sBAAxD,CACJ;AACI,mBACQ,2BAAK,SAAS,CAAG,gBAAjB,EACKK,UADL,CAEKJ,KAFL,CADR,CAMH","sourcesContent":["import React from 'react'\nimport CompletedGameCard from '../gamecards/CompletedGameCard'\n\nexport default function PastGameListings(props) {\n\n    const { currentLeague , selectGame } = props\n\n    const gameList = currentLeague.pastGames ? currentLeague.pastGames : []\n\n    const leagueName = currentLeague.name\n\n    const upcomingGamesMessage = <h3>Past {leagueName} games:</h3>\n    const noUpcomingGamesMessage =  <h3 className=\"no-games-message\">No {leagueName} games available on our partner's database: \n                                    <br></br> \n                                    https://www.thesportsdb.com/.\n                                    <br></br> \n                                    Please try another league.\n                                    </h3>\n\n    const games = (\n        gameList.map(game => {\n            return (\n                    <CompletedGameCard game={game} key={game.idEvent}  selectGame= {selectGame} />\n            )\n        }) \n        \n    )\n\n    const checkGames = gameList[0] ? upcomingGamesMessage : noUpcomingGamesMessage\n// \n    return (\n            <div className = \"card-container\">\n                {checkGames}\n                {games}\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}