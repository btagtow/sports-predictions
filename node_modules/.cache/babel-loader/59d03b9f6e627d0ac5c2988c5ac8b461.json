{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import UserPicks from'../gamecards/UserPicks';import{confirmUserData as _confirmUserData,deleteSubmittedGame as _deleteSubmittedGame,adjustPoints as _adjustPoints}from'../../redux/actions/user';function ProfileContainer(props){var gameSelections=function gameSelections(){if(props.isLoggedIn){return props.user.game_selections.map(function(game){return/*#__PURE__*/React.createElement(UserPicks,{key:game.id,game:game,deleteSubmittedGame:handleDelete,refreshUserProfile:handleRefresh});});}};var handleRefresh=function handleRefresh(){props.confirmUserData();};var handleDelete=function handleDelete(game){return props.deleteSubmittedGame(game),props.adjustPoints(props.user.betting_points+game.points_allocated);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,props.user.username),/*#__PURE__*/React.createElement(\"h4\",null,\"Betting points: \",props.user.betting_points),/*#__PURE__*/React.createElement(\"section\",null,\"Your selections:\",/*#__PURE__*/React.createElement(\"button\",{className:\"refresh-button\",onClick:handleRefresh},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"refresh\"},\"\\uD83D\\uDD04\")),/*#__PURE__*/React.createElement(\"div\",{className:\"user-games\"},gameSelections())));}function mapStateToProps(state){return{isLoggedIn:state.isLoggedIn,user:state.user};}function mapDispatchToProps(dispatch){return{confirmUserData:function confirmUserData(){return dispatch(_confirmUserData());},deleteSubmittedGame:function deleteSubmittedGame(game,user){return dispatch(_deleteSubmittedGame(game,user));},logout:function logout(){return dispatch({type:\"LOG_OFF\"});},adjustPoints:function adjustPoints(points){return dispatch(_adjustPoints(points));}};}export default connect(mapStateToProps,mapDispatchToProps)(ProfileContainer);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/user/ProfileContainer.js"],"names":["React","connect","UserPicks","confirmUserData","deleteSubmittedGame","adjustPoints","ProfileContainer","props","gameSelections","isLoggedIn","user","game_selections","map","game","id","handleDelete","handleRefresh","betting_points","points_allocated","username","mapStateToProps","state","mapDispatchToProps","dispatch","logout","type","points"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,eAAe,GAAfA,CAAAA,gBAAT,CAA0BC,mBAAmB,GAAnBA,CAAAA,oBAA1B,CAA+CC,YAAY,GAAZA,CAAAA,aAA/C,KAAmE,0BAAnE,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAE7B,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAEzB,GAAID,KAAK,CAACE,UAAV,CAAqB,CACjB,MAAOF,CAAAA,KAAK,CAACG,IAAN,CAAWC,eAAX,CAA2BC,GAA3B,CAA+B,SAAAC,IAAI,CAAI,CAC1C,mBAAO,oBAAC,SAAD,EAAW,GAAG,CAAEA,IAAI,CAACC,EAArB,CAAyB,IAAI,CAAED,IAA/B,CAAqC,mBAAmB,CAAEE,YAA1D,CAAwE,kBAAkB,CAAEC,aAA5F,EAAP,CACH,CAFM,CAAP,CAGH,CACJ,CAPD,CASA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACvBT,KAAK,CAACJ,eAAN,GACJ,CAFD,CAIA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,IAAI,CAAI,CACzB,MACIN,CAAAA,KAAK,CAACH,mBAAN,CAA0BS,IAA1B,EACAN,KAAK,CAACF,YAAN,CAAmBE,KAAK,CAACG,IAAN,CAAWO,cAAX,CAA4BJ,IAAI,CAACK,gBAApD,CAFJ,CAIH,CALD,CAQA,mBACI,4CACI,8BAAKX,KAAK,CAACG,IAAN,CAAWS,QAAhB,CADJ,cAEI,iDAAqBZ,KAAK,CAACG,IAAN,CAAWO,cAAhC,CAFJ,cAII,mEACI,8BAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAED,aAA5C,eAEI,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,SAA5B,iBAFJ,CADJ,cAKI,2BAAK,SAAS,CAAC,YAAf,EACKR,cAAc,EADnB,CALJ,CAJJ,CADJ,CAgBH,CAGD,QAASY,CAAAA,eAAT,CAAyBC,KAAzB,CAA+B,CAC3B,MAAO,CACHZ,UAAU,CAAEY,KAAK,CAACZ,UADf,CAEHC,IAAI,CAAEW,KAAK,CAACX,IAFT,CAAP,CAID,CAED,QAASY,CAAAA,kBAAT,CAA4BC,QAA5B,CAAqC,CACjC,MAAM,CACJpB,eAAe,CAAE,iCAAMoB,CAAAA,QAAQ,CAACpB,gBAAe,EAAhB,CAAd,EADb,CAEJC,mBAAmB,CAAE,6BAACS,IAAD,CAAOH,IAAP,QAAgBa,CAAAA,QAAQ,CAACnB,oBAAmB,CAACS,IAAD,CAAOH,IAAP,CAApB,CAAxB,EAFjB,CAGJc,MAAM,CAAE,wBAAMD,CAAAA,QAAQ,CAAC,CAACE,IAAI,CAAE,SAAP,CAAD,CAAd,EAHJ,CAIJpB,YAAY,CAAE,sBAACqB,MAAD,QAAYH,CAAAA,QAAQ,CAAClB,aAAY,CAACqB,MAAD,CAAb,CAApB,EAJV,CAAN,CAOH,CAEH,cAAezB,CAAAA,OAAO,CAACmB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6ChB,gBAA7C,CAAf","sourcesContent":["import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport UserPicks from '../gamecards/UserPicks'\nimport { confirmUserData, deleteSubmittedGame, adjustPoints } from '../../redux/actions/user'\n\nfunction ProfileContainer(props) {\n\n    const gameSelections = () => {\n        \n        if (props.isLoggedIn){\n            return props.user.game_selections.map(game => {\n                return <UserPicks key={game.id} game={game} deleteSubmittedGame={handleDelete} refreshUserProfile={handleRefresh}/>\n            })\n        }\n    }\n \n    const handleRefresh = () => {\n         props.confirmUserData()\n    }\n\n    const handleDelete = game => {\n        return (\n            props.deleteSubmittedGame(game), \n            props.adjustPoints(props.user.betting_points + game.points_allocated)\n        )\n    }\n\n\n    return (\n        <div>\n            <h1>{props.user.username}</h1>\n            <h4>Betting points: {props.user.betting_points}</h4>\n            \n            <section>Your selections:\n                <button className=\"refresh-button\" onClick={handleRefresh}> \n                    \n                    <span role=\"img\" aria-label=\"refresh\">ðŸ”„</span>\n                </button>\n                <div className=\"user-games\">\n                    {gameSelections()}\n                </div>\n            </section>\n        </div>\n    )\n}\n\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n  }\n\n  function mapDispatchToProps(dispatch){\n      return{\n        confirmUserData: () => dispatch(confirmUserData()), \n        deleteSubmittedGame: (game, user) => dispatch(deleteSubmittedGame(game, user)), \n        logout: () => dispatch({type: \"LOG_OFF\"}),\n        adjustPoints: (points) => dispatch(adjustPoints(points)),\n\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)\n\n  \n  "]},"metadata":{},"sourceType":"module"}