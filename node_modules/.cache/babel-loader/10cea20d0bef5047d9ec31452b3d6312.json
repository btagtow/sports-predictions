{"ast":null,"code":"import _slicedToArray from\"/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import LoginForm from'./forms/LoginForm';import SignupForm from'./forms/SignupForm';function Auth(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShown=_useState2[0],setIsShown=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoginShown=_useState4[0],setisLoginShown=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoggedIn=_useState6[0],setIsLoggedIn=_useState6[1];var toggleShown=function toggleShown(){return!isLoggedIn?setIsShown(!isShown):logout();};var toggleLogin=function toggleLogin(){return setisLoginShown(!isLoginShown);};var toggleIsLoggedIn=function toggleIsLoggedIn(){setIsLoggedIn(true);};var logout=function logout(){props.logout();localStorage.clear();setIsLoggedIn(false);setIsShown(false);};var pointer=function pointer(event){return event.target.style.cursor=\"pointer\";};return/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown\"},/*#__PURE__*/React.createElement(\"button\",{className:\"dropdown-button clickable\",onClick:!props.isLoggedIn?toggleShown:logout,onMouseOver:function onMouseOver(event){return pointer(event);}},props.isLoggedIn?\"Log out (\".concat(props.user.username,\")\"):\"Login or create account\"),isShown&&!props.isLoggedIn&&/*#__PURE__*/React.createElement(\"div\",{className:\"forms-container\"},isLoginShown?/*#__PURE__*/React.createElement(LoginForm,{toggleIsLoggedIn:toggleIsLoggedIn,setUserProfile:props.setUserProfile}):/*#__PURE__*/React.createElement(SignupForm,{setisLoginShown:setisLoginShown}),/*#__PURE__*/React.createElement(\"button\",{className:\"auth-button\",onClick:toggleLogin},isLoginShown?\"Create an account\":\"Already have an account?\")));}function mapStateToProps(state){return{isLoggedIn:state.isLoggedIn,user:state.user};}function mapDispatchToProps(dispatch){return{logout:function logout(){return dispatch({type:\"LOG_OFF\"});}};}export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/auth/Auth.js"],"names":["React","useState","connect","LoginForm","SignupForm","Auth","props","isShown","setIsShown","isLoginShown","setisLoginShown","isLoggedIn","setIsLoggedIn","toggleShown","logout","toggleLogin","toggleIsLoggedIn","localStorage","clear","pointer","event","target","style","cursor","user","username","setUserProfile","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"kNACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CAEA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,eACaL,QAAQ,CAAC,KAAD,CADrB,wCACVM,OADU,eACDC,UADC,8BAEuBP,QAAQ,CAAC,IAAD,CAF/B,yCAEVQ,YAFU,eAEIC,eAFJ,8BAGmBT,QAAQ,CAAC,KAAD,CAH3B,yCAGVU,UAHU,eAGEC,aAHF,eAKjB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,CAACF,UAAD,CAAcH,UAAU,CAAC,CAACD,OAAF,CAAxB,CAAqCO,MAAM,EAAjD,EAApB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAML,CAAAA,eAAe,CAAC,CAACD,YAAF,CAArB,EAApB,CAEA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BJ,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,CAIA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBR,KAAK,CAACQ,MAAN,GACAG,YAAY,CAACC,KAAb,GACAN,aAAa,CAAC,KAAD,CAAb,CACAJ,UAAU,CAAC,KAAD,CAAV,CACH,CALD,CAOA,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,MAAOA,CAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,CAA4B,SAAnC,CACH,CAFD,CAIA,mBACA,2BACI,SAAS,CAAC,UADd,eAGI,8BAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,CAACjB,KAAK,CAACK,UAAP,CAAoBE,WAApB,CAAkCC,MAAzF,CAAiG,WAAW,CAAE,qBAAAM,KAAK,QAAID,CAAAA,OAAO,CAACC,KAAD,CAAX,EAAnH,EACCd,KAAK,CAACK,UAAN,oBAA+BL,KAAK,CAACkB,IAAN,CAAWC,QAA1C,MAAwD,yBADzD,CAHJ,CAMKlB,OAAO,EAAI,CAACD,KAAK,CAACK,UAAlB,eACG,2BAAK,SAAS,CAAC,iBAAf,EACKF,YAAY,cAAG,oBAAC,SAAD,EAAW,gBAAgB,CAAEO,gBAA7B,CAA+C,cAAc,CAAEV,KAAK,CAACoB,cAArE,EAAH,cAA4F,oBAAC,UAAD,EAAY,eAAe,CAAEhB,eAA7B,EAD7G,cAEI,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAEK,WAAzC,EAAuDN,YAAY,CAAG,mBAAH,CAAyB,0BAA5F,CAFJ,CAPR,CADA,CAeH,CAED,QAASkB,CAAAA,eAAT,CAAyBC,KAAzB,CAA+B,CAC3B,MAAO,CACHjB,UAAU,CAAEiB,KAAK,CAACjB,UADf,CAEHa,IAAI,CAAEI,KAAK,CAACJ,IAFT,CAAP,CAIH,CAED,QAASK,CAAAA,kBAAT,CAA4BC,QAA5B,CAAqC,CACjC,MAAO,CACHhB,MAAM,CAAE,wBAAMgB,CAAAA,QAAQ,CAAC,CAACC,IAAI,CAAE,SAAP,CAAD,CAAd,EADL,CAAP,CAIH,CAED,cAAe7B,CAAAA,OAAO,CAACyB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CxB,IAA7C,CAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport {connect} from 'react-redux'\nimport LoginForm from './forms/LoginForm'\nimport SignupForm from './forms/SignupForm'\n\nfunction Auth(props) {\n    const [isShown, setIsShown] = useState(false);\n    const [isLoginShown, setisLoginShown] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const toggleShown = () => !isLoggedIn ? setIsShown(!isShown) : logout()\n\n    const toggleLogin = () => setisLoginShown(!isLoginShown)\n\n    const toggleIsLoggedIn = () => {\n        setIsLoggedIn(true)\n    }\n\n    const logout = () => {\n        props.logout()        \n        localStorage.clear()\n        setIsLoggedIn(false)\n        setIsShown(false)\n    }\n\n    const pointer = (event) => {\n        return event.target.style.cursor = \"pointer\"\n    }\n\n    return (\n    <div \n        className=\"dropdown\"         \n    >\n        <button className=\"dropdown-button clickable\" onClick={!props.isLoggedIn ? toggleShown : logout} onMouseOver={event => pointer(event)} >\n        {props.isLoggedIn ? `Log out (${props.user.username})` : \"Login or create account\"}\n        </button>\n        {isShown && !props.isLoggedIn && (\n            <div className=\"forms-container\">\n                {isLoginShown ? <LoginForm toggleIsLoggedIn={toggleIsLoggedIn} setUserProfile={props.setUserProfile}/> : <SignupForm setisLoginShown={setisLoginShown}/>}\n                <button className=\"auth-button\" onClick={toggleLogin}>{isLoginShown ? \"Create an account\" : \"Already have an account?\"}</button>\n            </div>\n        )}\n    </div>\n    );\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        logout: () => dispatch({type: \"LOG_OFF\"}),\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\n"]},"metadata":{},"sourceType":"module"}