{"ast":null,"code":"var _jsxFileName = \"/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/containers/AllGamesContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CompletedGameListings from '../GameListings/CompletedGameListings';\nimport UpcomingAndSelectedGamesContainer from './UpcomingAndSelectedGamesContainer';\n\nfunction AllGamesContainer(props) {\n  let leagueArr = [];\n\n  for (let league in props.leagues) {\n    leagueArr.push(props.leagues[league]);\n  }\n\n  let currentLeague = leagueArr.find(league => league.selected === true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-games-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CompletedGameListings, {\n    currentLeague: currentLeague,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UpcomingAndSelectedGamesContainer, {\n    currentLeague: currentLeague,\n    adjustUserBettingPoints: props.adjustUserBettingPoints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    leagues: state.leagues,\n    isLoggedIn: state.isLoggedIn\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    adjustUserBettingPoints: points => dispatch({\n      type: \"ADJUST_POINTS\",\n      payload: points\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGamesContainer);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/containers/AllGamesContainer.js"],"names":["React","connect","CompletedGameListings","UpcomingAndSelectedGamesContainer","AllGamesContainer","props","leagueArr","league","leagues","push","currentLeague","find","selected","adjustUserBettingPoints","mapStateToProps","state","isLoggedIn","mapDispatchToProps","dispatch","points","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,iCAAP,MAA8C,qCAA9C;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAE9B,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAM,IAAIC,MAAV,IAAoBF,KAAK,CAACG,OAA1B,EAAmC;AAC/BF,IAAAA,SAAS,CAACG,IAAV,CAAeJ,KAAK,CAACG,OAAN,CAAcD,MAAd,CAAf;AACH;;AAED,MAAIG,aAAa,GAAGJ,SAAS,CAACK,IAAV,CAAeJ,MAAM,IAAIA,MAAM,CAACK,QAAP,KAAkB,IAA3C,CAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,qBAAD;AAAuB,IAAA,aAAa,EAAIF,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,iCAAD;AAAmC,IAAA,aAAa,EAAIA,aAApD;AAAmE,IAAA,uBAAuB,EAAEL,KAAK,CAACQ,uBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AACHP,IAAAA,OAAO,EAAEO,KAAK,CAACP,OADZ;AAEHQ,IAAAA,UAAU,EAAED,KAAK,CAACC;AAFf,GAAP;AAID;;AACH,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AACHL,IAAAA,uBAAuB,EAAGM,MAAD,IAAYD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,eAAP;AAAwBC,MAAAA,OAAO,EAAEF;AAAjC,KAAD;AAD1C,GAAP;AAIH;;AACD,eAAelB,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,iBAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CompletedGameListings from '../GameListings/CompletedGameListings'\nimport UpcomingAndSelectedGamesContainer from './UpcomingAndSelectedGamesContainer'\n\nfunction AllGamesContainer(props) {\n\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n\n    let currentLeague = leagueArr.find(league => league.selected===true)\n\n    return (\n        <div className=\"all-games-container\">\n            <CompletedGameListings currentLeague = {currentLeague} />\n            <UpcomingAndSelectedGamesContainer currentLeague = {currentLeague} adjustUserBettingPoints={props.adjustUserBettingPoints} />\n\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues,\n        isLoggedIn: state.isLoggedIn,\n    }\n  }\nfunction mapDispatchToProps(dispatch){\n    return {\n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGamesContainer)"]},"metadata":{},"sourceType":"module"}