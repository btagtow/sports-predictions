{"ast":null,"code":"import React from'react';export default function GameCard(props){var game=props.game,selectGame=props.selectGame;function handleClick(event){game.selectedWinnerId=event.target.id;game.selectedWinnerString=event.target.value;game.points_allocated=0;return selectGame(game);}var homeVsAway=function homeVsAway(){var homeButton=/*#__PURE__*/React.createElement(\"button\",{className:\"game-button\",onClick:handleClick,id:game.idHomeTeam,value:game.strHomeTeam},game.strHomeTeam,\" (home)\");var awayButton=/*#__PURE__*/React.createElement(\"button\",{className:\"game-button\",onClick:handleClick,id:game.idAwayTeam,value:game.strAwayTeam},game.strAwayTeam,\" (away)\");var americanEvent=function americanEvent(game){return parseInt(game.idLeague)===parseInt(4391||4424||4387||4380);};var eventDate=/*#__PURE__*/React.createElement(\"p\",null,game.dateEvent,\" at \",game.strTime);if(americanEvent(game)){return/*#__PURE__*/React.createElement(\"div\",{className:\"game-card\",key:game.idEvent},/*#__PURE__*/React.createElement(\"h3\",null,game.strEventAlternate),eventDate,awayButton,homeButton);}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"game-card\",key:game.idEvent},/*#__PURE__*/React.createElement(\"h3\",null,game.strHomeTeam,\" vs. \",game.strAwayTeam),eventDate,homeButton,awayButton);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"game-card-container\"},homeVsAway());}","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/gamecards/UpcomingGameCard.js"],"names":["React","GameCard","props","game","selectGame","handleClick","event","selectedWinnerId","target","id","selectedWinnerString","value","points_allocated","homeVsAway","homeButton","idHomeTeam","strHomeTeam","awayButton","idAwayTeam","strAwayTeam","americanEvent","parseInt","idLeague","eventDate","dateEvent","strTime","idEvent","strEventAlternate"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,IAC7BC,CAAAA,IAD6B,CACTD,KADS,CAC7BC,IAD6B,CACvBC,UADuB,CACTF,KADS,CACvBE,UADuB,CAGpC,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA2B,CACvBH,IAAI,CAACI,gBAAL,CAAwBD,KAAK,CAACE,MAAN,CAAaC,EAArC,CACAN,IAAI,CAACO,oBAAL,CAA4BJ,KAAK,CAACE,MAAN,CAAaG,KAAzC,CACAR,IAAI,CAACS,gBAAL,CAAwB,CAAxB,CACA,MAAOR,CAAAA,UAAU,CAACD,IAAD,CAAjB,CACH,CAED,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAIC,CAAAA,UAAU,cAAG,8BAAQ,SAAS,CAAC,aAAlB,CAA+B,OAAO,CAAET,WAAxC,CAAqD,EAAE,CAAEF,IAAI,CAACY,UAA9D,CAA0E,KAAK,CAAEZ,IAAI,CAACa,WAAtF,EAAoGb,IAAI,CAACa,WAAzG,WAAjB,CACA,GAAIC,CAAAA,UAAU,cAAG,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAEZ,WAAzC,CAAsD,EAAE,CAAEF,IAAI,CAACe,UAA/D,CAA2E,KAAK,CAAEf,IAAI,CAACgB,WAAvF,EAAqGhB,IAAI,CAACgB,WAA1G,WAAjB,CACA,GAAIC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAjB,IAAI,QAAKkB,CAAAA,QAAQ,CAAClB,IAAI,CAACmB,QAAN,CAAR,GAA4BD,QAAQ,CAAC,MAAQ,IAAR,EAAgB,IAAhB,EAAwB,IAAzB,CAAzC,EAAxB,CACA,GAAIE,CAAAA,SAAS,cAAG,6BAAIpB,IAAI,CAACqB,SAAT,QAAwBrB,IAAI,CAACsB,OAA7B,CAAhB,CAEA,GAAIL,aAAa,CAACjB,IAAD,CAAjB,CAAwB,CACpB,mBACI,2BAAK,SAAS,CAAG,WAAjB,CAA6B,GAAG,CAAEA,IAAI,CAACuB,OAAvC,eACA,8BAAKvB,IAAI,CAACwB,iBAAV,CADA,CAEKJ,SAFL,CAGSN,UAHT,CAISH,UAJT,CADJ,CAQH,CATD,IASO,CACH,mBACI,2BAAK,SAAS,CAAG,WAAjB,CAA6B,GAAG,CAAEX,IAAI,CAACuB,OAAvC,eACI,8BAAKvB,IAAI,CAACa,WAAV,SAA4Bb,IAAI,CAACgB,WAAjC,CADJ,CAEKI,SAFL,CAGST,UAHT,CAISG,UAJT,CADJ,CASH,CACJ,CA1BD,CA4BA,mBACI,2BAAK,SAAS,CAAC,qBAAf,EACKJ,UAAU,EADf,CADJ,CAKH","sourcesContent":["import React from 'react'\n\nexport default function GameCard(props) {\n    const {game, selectGame} = props\n\n    function handleClick(event){\n        game.selectedWinnerId = event.target.id\n        game.selectedWinnerString = event.target.value\n        game.points_allocated = 0\n        return selectGame(game)\n    }\n\n    const homeVsAway = () => {\n        let homeButton = <button className=\"game-button\"onClick={handleClick} id={game.idHomeTeam} value={game.strHomeTeam}>{game.strHomeTeam} (home)</button>\n        let awayButton = <button className=\"game-button\" onClick={handleClick} id={game.idAwayTeam} value={game.strAwayTeam}>{game.strAwayTeam} (away)</button>\n        let americanEvent = game => (parseInt(game.idLeague) === parseInt(4391 || 4424 || 4387 || 4380))\n        let eventDate = <p>{game.dateEvent} at {game.strTime}</p>\n\n        if (americanEvent(game)){\n            return (\n                <div className = \"game-card\" key={game.idEvent}>\n                <h3>{game.strEventAlternate}</h3>\n                    {eventDate}\n                        {awayButton}\n                        {homeButton}\n                </div>\n            )\n        } else {\n            return (\n                <div className = \"game-card\" key={game.idEvent}>\n                    <h3>{game.strHomeTeam} vs. {game.strAwayTeam}</h3>\n                    {eventDate}                    \n                        {homeButton}\n                        {awayButton}\n                </div>\n            )\n\n        }\n    }\n\n    return (\n        <div className=\"game-card-container\">\n            {homeVsAway()}\n        </div>        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}