{"ast":null,"code":"var _jsxFileName = \"/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/user/ProfileContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport UserPicks from '../gamecards/UserPicks';\nimport { confirmUserData, deleteSubmittedGame, adjustPoints } from '../../redux/actions/user';\n\nfunction ProfileContainer(props) {\n  const gameSelections = () => {\n    if (props.isLoggedIn) {\n      return props.user.game_selections.map(game => {\n        return /*#__PURE__*/React.createElement(UserPicks, {\n          key: game.id,\n          game: game,\n          deleteSubmittedGame: handleDelete,\n          refreshUserProfile: handleRefresh,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n  };\n\n  const handleRefresh = () => {\n    props.confirmUserData();\n  };\n\n  const handleDelete = game => {\n    return props.deleteSubmittedGame(game), props.adjustPoints(props.user.betting_points + game.points_allocated);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.user.username), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Betting points: \", props.user.betting_points), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Your selections:\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"refresh-button\",\n    onClick: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"refresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDD04\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-games\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, gameSelections())));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    confirmUserData: () => dispatch(confirmUserData()),\n    deleteSubmittedGame: (game, user) => dispatch(deleteSubmittedGame(game, user)),\n    logout: () => dispatch({\n      type: \"LOG_OFF\"\n    }),\n    adjustPoints: points => dispatch(adjustPoints(points))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/user/ProfileContainer.js"],"names":["React","connect","UserPicks","confirmUserData","deleteSubmittedGame","adjustPoints","ProfileContainer","props","gameSelections","isLoggedIn","user","game_selections","map","game","id","handleDelete","handleRefresh","betting_points","points_allocated","username","mapStateToProps","state","mapDispatchToProps","dispatch","logout","type","points"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,YAA/C,QAAmE,0BAAnE;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAE7B,QAAMC,cAAc,GAAG,MAAM;AAEzB,QAAID,KAAK,CAACE,UAAV,EAAqB;AACjB,aAAOF,KAAK,CAACG,IAAN,CAAWC,eAAX,CAA2BC,GAA3B,CAA+BC,IAAI,IAAI;AAC1C,4BAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,UAAA,IAAI,EAAED,IAA/B;AAAqC,UAAA,mBAAmB,EAAEE,YAA1D;AAAwE,UAAA,kBAAkB,EAAEC,aAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;AACJ,GAPD;;AASA,QAAMA,aAAa,GAAG,MAAM;AACvBT,IAAAA,KAAK,CAACJ,eAAN;AACJ,GAFD;;AAIA,QAAMY,YAAY,GAAGF,IAAI,IAAI;AACzB,WACIN,KAAK,CAACH,mBAAN,CAA0BS,IAA1B,GACAN,KAAK,CAACF,YAAN,CAAmBE,KAAK,CAACG,IAAN,CAAWO,cAAX,GAA4BJ,IAAI,CAACK,gBAApD,CAFJ;AAIH,GALD;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACG,IAAN,CAAWS,QAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBZ,KAAK,CAACG,IAAN,CAAWO,cAAhC,CAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACI;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAED,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,cAAc,EADnB,CALJ,CAJJ,CADJ;AAgBH;;AAGD,SAASY,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AACHZ,IAAAA,UAAU,EAAEY,KAAK,CAACZ,UADf;AAEHC,IAAAA,IAAI,EAAEW,KAAK,CAACX;AAFT,GAAP;AAID;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAM;AACJpB,IAAAA,eAAe,EAAE,MAAMoB,QAAQ,CAACpB,eAAe,EAAhB,CAD3B;AAEJC,IAAAA,mBAAmB,EAAE,CAACS,IAAD,EAAOH,IAAP,KAAgBa,QAAQ,CAACnB,mBAAmB,CAACS,IAAD,EAAOH,IAAP,CAApB,CAFzC;AAGJc,IAAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAHlB;AAIJpB,IAAAA,YAAY,EAAGqB,MAAD,IAAYH,QAAQ,CAAClB,YAAY,CAACqB,MAAD,CAAb;AAJ9B,GAAN;AAOH;;AAEH,eAAezB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,gBAA7C,CAAf","sourcesContent":["import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport UserPicks from '../gamecards/UserPicks'\nimport { confirmUserData, deleteSubmittedGame, adjustPoints } from '../../redux/actions/user'\n\nfunction ProfileContainer(props) {\n\n    const gameSelections = () => {\n        \n        if (props.isLoggedIn){\n            return props.user.game_selections.map(game => {\n                return <UserPicks key={game.id} game={game} deleteSubmittedGame={handleDelete} refreshUserProfile={handleRefresh}/>\n            })\n        }\n    }\n \n    const handleRefresh = () => {\n         props.confirmUserData()\n    }\n\n    const handleDelete = game => {\n        return (\n            props.deleteSubmittedGame(game), \n            props.adjustPoints(props.user.betting_points + game.points_allocated)\n        )\n    }\n\n\n    return (\n        <div>\n            <h1>{props.user.username}</h1>\n            <h4>Betting points: {props.user.betting_points}</h4>\n            \n            <section>Your selections:\n                <button className=\"refresh-button\" onClick={handleRefresh}> \n                    \n                    <span role=\"img\" aria-label=\"refresh\">ðŸ”„</span>\n                </button>\n                <div className=\"user-games\">\n                    {gameSelections()}\n                </div>\n            </section>\n        </div>\n    )\n}\n\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: state.isLoggedIn,\n        user: state.user\n    }\n  }\n\n  function mapDispatchToProps(dispatch){\n      return{\n        confirmUserData: () => dispatch(confirmUserData()), \n        deleteSubmittedGame: (game, user) => dispatch(deleteSubmittedGame(game, user)), \n        logout: () => dispatch({type: \"LOG_OFF\"}),\n        adjustPoints: (points) => dispatch(adjustPoints(points)),\n\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)\n\n  \n  "]},"metadata":{},"sourceType":"module"}