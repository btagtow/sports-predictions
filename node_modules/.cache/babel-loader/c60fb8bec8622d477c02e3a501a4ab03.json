{"ast":null,"code":"// function refreshProfile(user, dispatch){\n//     dispatch({type: \"REFRESH_PROFILE\", payload: user})\n// }\nvar selectedGamesURL=\"http://localhost:3000/game_selections\";// const userURL = `http://localhost:3000/users/${localStorage.user_id}`\nfunction confirmUserData(){return function(dispatch){dispatch({type:\"START_CONFIRMING_USER\"});fetch(\"http://localhost:3000/users/\".concat(localStorage.user_id),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.token)}}).then(function(response){return response.json();}).then(function(user){dispatch({type:\"CONFIRM_USER\",user:user});});};}function submitGame(game){return function(dispatch){dispatch({type:\"START_SUBMITTING_GAME\"});fetch(selectedGamesURL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.token)},body:JSON.stringify(game)}).then(function(response){return response.json();}).then(function(r){console.log(r);if(r.message===\"Accepted\"){return dispatch({type:\"SUBMIT_GAME\",game:r.game_selection});}else alert(\"Error submitting picks, please try again.\");});};}function adjustPoints(newPoints){return function(dispatch){dispatch({type:\"START_ADJUSTING_POINTS\"});fetch(\"http://localhost:3000/users/\".concat(localStorage.user_id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.token)},body:JSON.stringify({betting_points:newPoints})}).then(function(response){return response.json();}).then(function(r){dispatch({type:\"ADJUST_POINTS\",betting_points:newPoints});});};}function deleteSubmittedGame(game){return function(dispatch){dispatch({type:\"START_DELETING_GAME\"});fetch(\"http://localhost:3000/game_selections/\".concat(game.id),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.token)}}).then(function(response){return response.json();}).then(function(r){var g=r.deleted_game;return dispatch({type:\"DELETE_GAME\",g:g});});};}export{confirmUserData,submitGame,adjustPoints,deleteSubmittedGame};","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/redux/actions/user.js"],"names":["selectedGamesURL","confirmUserData","dispatch","type","fetch","localStorage","user_id","method","headers","token","then","response","json","user","submitGame","game","body","JSON","stringify","r","console","log","message","game_selection","alert","adjustPoints","newPoints","betting_points","deleteSubmittedGame","id","g","deleted_game"],"mappings":"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","sourcesContent":["// function refreshProfile(user, dispatch){\n//     dispatch({type: \"REFRESH_PROFILE\", payload: user})\n// }\nconst selectedGamesURL = `http://localhost:3000/game_selections`\n// const userURL = `http://localhost:3000/users/${localStorage.user_id}`\n\nfunction confirmUserData(){\n    return (dispatch) => {\n        dispatch({type: \"START_CONFIRMING_USER\"});\n        fetch(`http://localhost:3000/users/${localStorage.user_id}`, {\n            method: \"GET\", \n            headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${localStorage.token}`\n                }\n            }\n        ).then(response => response.json()\n        ).then(user => {\n            dispatch({type: \"CONFIRM_USER\", user })\n        })\n    }\n}\nfunction submitGame(game){\n    return (dispatch) => {\n        dispatch({type: \"START_SUBMITTING_GAME\"});\n        fetch(selectedGamesURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify(game)\n        }).then(response => response.json()\n        ).then(r => {\n            console.log(r)\n            if (r.message === \"Accepted\"){\n                return dispatch({type: \"SUBMIT_GAME\", game: r.game_selection})\n            } else (alert(\"Error submitting picks, please try again.\"))\n        })\n    }        \n}\n\nfunction adjustPoints(newPoints){\n    return (dispatch) => {\n        dispatch({type: \"START_ADJUSTING_POINTS\"});\n        fetch(`http://localhost:3000/users/${localStorage.user_id}`, {\n            method: \"PUT\", \n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify({betting_points: newPoints})\n        }).then(response => response.json()\n        ).then(r => {\n            dispatch({type: \"ADJUST_POINTS\", betting_points: newPoints})\n        })\n\n    }\n}\n\nfunction deleteSubmittedGame(game){\n    return dispatch => {\n        dispatch({type: \"START_DELETING_GAME\"})\n            fetch(`http://localhost:3000/game_selections/${game.id}`, {\n                method: \"DELETE\", \n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${localStorage.token}`\n                }\n            }).then(response => response.json()\n        ).then(r => {\n            let g = r.deleted_game\n                return dispatch({type: \"DELETE_GAME\", g})\n            \n        })\n    }\n}\n\nexport {\n    confirmUserData,\n    submitGame,\n    adjustPoints, \n    deleteSubmittedGame\n}"]},"metadata":{},"sourceType":"module"}