{"ast":null,"code":"import React from'react';import LeagueButton from'./LeagueButton';import{connect}from'react-redux';import{selectNFL as _selectNFL,selectEPL as _selectEPL,selectMLB as _selectMLB,selectNBA as _selectNBA,selectNHL as _selectNHL}from'../../../redux/actions/leagues';function LeagueButtons(props){var leagueArr=[];for(var league in props.leagues){leagueArr.push(props.leagues[league]);}var createButtons=function createButtons(){return leagueArr.map(function(league){return/*#__PURE__*/React.createElement(LeagueButton,{key:league.id,id:league.id,name:league.name,emoji:league.emoji,select:addSelect(league)});});};var addSelect=function addSelect(league){switch(league.id){case 4391:return props.selectNFL;case 4328:return props.selectEPL;case 4424:return props.selectMLB;case 4380:return props.selectNHL;case 4387:return props.selectNBA;default:return null;}};return/*#__PURE__*/React.createElement(\"div\",{className:\"league-button-container\"},createButtons());}function mapStateToProps(state){return{leagues:state.leagues};}function mapDispatchToProps(dispatch){return{refreshProfile:function refreshProfile(user){return dispatch({type:\"REFRESH_PROFILE\",payload:user});},adjustUserBettingPoints:function adjustUserBettingPoints(points){return dispatch({type:\"ADJUST_POINTS\",payload:points});},selectNFL:function selectNFL(){return dispatch(_selectNFL());},selectNBA:function selectNBA(){return dispatch(_selectNBA());},selectNHL:function selectNHL(){return dispatch(_selectNHL());},selectEPL:function selectEPL(){return dispatch(_selectEPL());},selectMLB:function selectMLB(){return dispatch(_selectMLB());}};}export default connect(mapStateToProps,mapDispatchToProps)(LeagueButtons);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/navbar-buttons/league/LeagueButtonsContainer.js"],"names":["React","LeagueButton","connect","selectNFL","selectEPL","selectMLB","selectNBA","selectNHL","LeagueButtons","props","leagueArr","league","leagues","push","createButtons","map","id","name","emoji","addSelect","mapStateToProps","state","mapDispatchToProps","dispatch","refreshProfile","user","type","payload","adjustUserBettingPoints","points"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAwB,gBAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAUC,SAAS,GAATA,CAAAA,UAAV,CAAqBC,SAAS,GAATA,CAAAA,UAArB,CAAgCC,SAAS,GAATA,CAAAA,UAAhC,CAA2CC,SAAS,GAATA,CAAAA,UAA3C,CAAsDC,SAAS,GAATA,CAAAA,UAAtD,KAAuE,gCAAvE,CAEA,QAASC,CAAAA,aAAT,CAAwBC,KAAxB,CAA+B,CAC3B,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,IAAM,GAAIC,CAAAA,MAAV,GAAoBF,CAAAA,KAAK,CAACG,OAA1B,CAAmC,CAC/BF,SAAS,CAACG,IAAV,CAAeJ,KAAK,CAACG,OAAN,CAAcD,MAAd,CAAf,EACH,CAED,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAOJ,CAAAA,SAAS,CAACK,GAAV,CAAc,SAAAJ,MAAM,CAAI,CAC3B,mBAAO,oBAAC,YAAD,EAAc,GAAG,CAAEA,MAAM,CAACK,EAA1B,CAA8B,EAAE,CAAEL,MAAM,CAACK,EAAzC,CAA6C,IAAI,CAAEL,MAAM,CAACM,IAA1D,CAAgE,KAAK,CAAEN,MAAM,CAACO,KAA9E,CAAqF,MAAM,CAAEC,SAAS,CAACR,MAAD,CAAtG,EAAP,CACH,CAFM,CAAP,CAGH,CAJD,CAMA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAR,MAAM,CAAI,CACxB,OAAOA,MAAM,CAACK,EAAd,EACI,IAAK,KAAL,CACI,MAAOP,CAAAA,KAAK,CAACN,SAAb,CACJ,IAAK,KAAL,CACI,MAAOM,CAAAA,KAAK,CAACL,SAAb,CACJ,IAAK,KAAL,CACI,MAAOK,CAAAA,KAAK,CAACJ,SAAb,CACJ,IAAK,KAAL,CACI,MAAOI,CAAAA,KAAK,CAACF,SAAb,CACJ,IAAK,KAAL,CACI,MAAOE,CAAAA,KAAK,CAACH,SAAb,CACJ,QAAS,MAAO,KAAP,CAXb,CAaH,CAdD,CAeA,mBACI,2BAAK,SAAS,CAAC,yBAAf,EACKQ,aAAa,EADlB,CADJ,CAKH,CAED,QAASM,CAAAA,eAAT,CAAyBC,KAAzB,CAA+B,CAC3B,MAAO,CACHT,OAAO,CAAES,KAAK,CAACT,OADZ,CAAP,CAGD,CAED,QAASU,CAAAA,kBAAT,CAA4BC,QAA5B,CAAqC,CACnC,MAAO,CACHC,cAAc,CAAE,wBAACC,IAAD,QAAUF,CAAAA,QAAQ,CAAC,CAACG,IAAI,CAAE,iBAAP,CAA0BC,OAAO,CAAEF,IAAnC,CAAD,CAAlB,EADb,CAEHG,uBAAuB,CAAE,iCAACC,MAAD,QAAYN,CAAAA,QAAQ,CAAC,CAACG,IAAI,CAAE,eAAP,CAAwBC,OAAO,CAAEE,MAAjC,CAAD,CAApB,EAFtB,CAGH1B,SAAS,CAAE,2BAAMoB,CAAAA,QAAQ,CAACpB,UAAS,EAAV,CAAd,EAHR,CAIHG,SAAS,CAAE,2BAAMiB,CAAAA,QAAQ,CAACjB,UAAS,EAAV,CAAd,EAJR,CAKHC,SAAS,CAAE,2BAAMgB,CAAAA,QAAQ,CAAChB,UAAS,EAAV,CAAd,EALR,CAMHH,SAAS,CAAE,2BAAMmB,CAAAA,QAAQ,CAACnB,UAAS,EAAV,CAAd,EANR,CAOHC,SAAS,CAAE,2BAAMkB,CAAAA,QAAQ,CAAClB,UAAS,EAAV,CAAd,EAPR,CAAP,CASD,CAGH,cAAeH,CAAAA,OAAO,CAACkB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React from 'react'\nimport LeagueButton from'./LeagueButton'\nimport {connect} from 'react-redux'\nimport {  selectNFL, selectEPL, selectMLB, selectNBA, selectNHL } from '../../../redux/actions/leagues'\n\nfunction LeagueButtons (props) {\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n    \n    const createButtons = () => {\n        return leagueArr.map(league => {\n            return <LeagueButton key={league.id} id={league.id} name={league.name} emoji={league.emoji} select={addSelect(league)} />\n        })\n    }\n    \n    const addSelect = league => {\n        switch(league.id){\n            case 4391 : \n                return props.selectNFL\n            case 4328 : \n                return props.selectEPL\n            case 4424 : \n                return props.selectMLB\n            case 4380 : \n                return props.selectNHL\n            case 4387 : \n                return props.selectNBA\n            default: return null\n        }\n    }\n    return (\n        <div className=\"league-button-container\">\n            {createButtons()}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues\n    }\n  }\n  \n  function mapDispatchToProps(dispatch){\n    return {\n        refreshProfile: (user) => dispatch({type: \"REFRESH_PROFILE\", payload: user}), \n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        selectNFL: () => dispatch(selectNFL()),\n        selectNBA: () => dispatch(selectNBA()),\n        selectNHL: () => dispatch(selectNHL()),\n        selectEPL: () => dispatch(selectEPL()),\n        selectMLB: () => dispatch(selectMLB()),\n    }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeagueButtons)"]},"metadata":{},"sourceType":"module"}