{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import CompletedGameListings from'../GameListings/CompletedGameListings';import UpcomingAndSelectedGamesContainer from'./UpcomingAndSelectedGamesContainer';function AllGamesContainer(props){var leagueArr=[];for(var league in props.leagues){leagueArr.push(props.leagues[league]);}var currentLeague=leagueArr.find(function(league){return league.selected===true;});return/*#__PURE__*/React.createElement(\"div\",{className:\"all-games-container\"},/*#__PURE__*/React.createElement(CompletedGameListings,{currentLeague:currentLeague}),/*#__PURE__*/React.createElement(UpcomingAndSelectedGamesContainer,{currentLeague:currentLeague,adjustUserBettingPoints:props.adjustUserBettingPoints}));}function mapStateToProps(state){return{leagues:state.leagues,isLoggedIn:state.isLoggedIn};}function mapDispatchToProps(dispatch){return{adjustUserBettingPoints:function adjustUserBettingPoints(points){return dispatch({type:\"ADJUST_POINTS\",payload:points});}};}export default connect(mapStateToProps,mapDispatchToProps)(AllGamesContainer);","map":{"version":3,"sources":["/Users/benjamintagtow/Desktop/job-search/projects/sports-predictor/sports-predictions-front/src/components/containers/AllGamesContainer.js"],"names":["React","connect","CompletedGameListings","UpcomingAndSelectedGamesContainer","AllGamesContainer","props","leagueArr","league","leagues","push","currentLeague","find","selected","adjustUserBettingPoints","mapStateToProps","state","isLoggedIn","mapDispatchToProps","dispatch","points","type","payload"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,qBAAP,KAAkC,uCAAlC,CACA,MAAOC,CAAAA,iCAAP,KAA8C,qCAA9C,CAEA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAE9B,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,IAAM,GAAIC,CAAAA,MAAV,GAAoBF,CAAAA,KAAK,CAACG,OAA1B,CAAmC,CAC/BF,SAAS,CAACG,IAAV,CAAeJ,KAAK,CAACG,OAAN,CAAcD,MAAd,CAAf,EACH,CAED,GAAIG,CAAAA,aAAa,CAAGJ,SAAS,CAACK,IAAV,CAAe,SAAAJ,MAAM,QAAIA,CAAAA,MAAM,CAACK,QAAP,GAAkB,IAAtB,EAArB,CAApB,CAEA,mBACI,2BAAK,SAAS,CAAC,qBAAf,eACI,oBAAC,qBAAD,EAAuB,aAAa,CAAIF,aAAxC,EADJ,cAEI,oBAAC,iCAAD,EAAmC,aAAa,CAAIA,aAApD,CAAmE,uBAAuB,CAAEL,KAAK,CAACQ,uBAAlG,EAFJ,CADJ,CAOH,CAED,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAA+B,CAC3B,MAAO,CACHP,OAAO,CAAEO,KAAK,CAACP,OADZ,CAEHQ,UAAU,CAAED,KAAK,CAACC,UAFf,CAAP,CAID,CACH,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAqC,CACjC,MAAO,CACHL,uBAAuB,CAAE,iCAACM,MAAD,QAAYD,CAAAA,QAAQ,CAAC,CAACE,IAAI,CAAE,eAAP,CAAwBC,OAAO,CAAEF,MAAjC,CAAD,CAApB,EADtB,CAAP,CAIH,CACD,cAAelB,CAAAA,OAAO,CAACa,eAAD,CAAkBG,kBAAlB,CAAP,CAA6Cb,iBAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CompletedGameListings from '../GameListings/CompletedGameListings'\nimport UpcomingAndSelectedGamesContainer from './UpcomingAndSelectedGamesContainer'\n\nfunction AllGamesContainer(props) {\n\n    let leagueArr = [];\n    \n    for ( let league in props.leagues ){\n        leagueArr.push(props.leagues[league])\n    }\n\n    let currentLeague = leagueArr.find(league => league.selected===true)\n\n    return (\n        <div className=\"all-games-container\">\n            <CompletedGameListings currentLeague = {currentLeague} />\n            <UpcomingAndSelectedGamesContainer currentLeague = {currentLeague} adjustUserBettingPoints={props.adjustUserBettingPoints} />\n\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        leagues: state.leagues,\n        isLoggedIn: state.isLoggedIn,\n    }\n  }\nfunction mapDispatchToProps(dispatch){\n    return {\n        adjustUserBettingPoints: (points) => dispatch({type: \"ADJUST_POINTS\", payload: points}),\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AllGamesContainer)"]},"metadata":{},"sourceType":"module"}